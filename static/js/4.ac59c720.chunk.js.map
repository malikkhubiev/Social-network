{"version":3,"sources":["components/Users/Users.module.css","components/Users/UsersItem/UserItem.module.css","images/preloader.gif","components/common/Preloader/Preloader.tsx","components/common/Selectors/users-selectors.ts","components/Users/UsersItem/UserItem.jsx","components/Users/UsersSearchForm/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersComponent.tsx"],"names":["module","exports","Preloader","alt","style","position","transform","top","left","src","preloader","getAllUsers","state","usersPage","users","getTotalUsersCount","totalUsersCount","getPageSize","pageSize","getCurrentPage","currentPage","getIsFetching","isFetching","getFilter","filter","UserItem","props","className","styles","sectionUserItem","sectionUserItemLeft","to","pathCreator","id","sectionUserItemLeftImg","followed","onClick","unFollow","sectionUserItemLeftButton","follow","sectionUserItemDesc","sectionUserItemDescTxt","name","usersSearchFormValidate","values","UsersSearchForm","React","memo","initialValues","term","friends","validate","onSubmit","setSubmitting","setFilter","isSubmitting","type","placeholder","disabled","as","value","Users","useSelector","history","useHistory","dispatch","useDispatch","myFollow","myUnFollow","useEffect","push","pathname","search","pagesCount","Math","ceil","firstUser","lastUser","currentUsers","slice","pages","i","sectionUsers","myGetUsers","length","map","asd","key","sectionUsersList","n","bold","pageNumber","sectionUsersListLi","UsersComponent","getUsers"],"mappings":"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","file":"static/js/4.ac59c720.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionUsers\":\"Users_sectionUsers__2Sliz\",\"sectionUsersList\":\"Users_sectionUsersList__271At\",\"sectionUsersListLi\":\"Users_sectionUsersListLi__hUydY\",\"bold\":\"Users_bold__1vKRU\",\"preloaderImg\":\"Users_preloaderImg__7bDw1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionUserItem\":\"UserItem_sectionUserItem__3DvdS\",\"sectionUserItemLeft\":\"UserItem_sectionUserItemLeft__1tEhq\",\"sectionUserItemLeftImg\":\"UserItem_sectionUserItemLeftImg__O7Ido\",\"sectionUserItemLeftButton\":\"UserItem_sectionUserItemLeftButton__1G4_f\",\"sectionUserItemDesc\":\"UserItem_sectionUserItemDesc__w-E2W\"};","export default __webpack_public_path__ + \"static/media/preloader.0b960412.gif\";","import React from 'react';\r\nimport preloader from './../../../images/preloader.gif';\r\n\r\nexport const Preloader = () => {\r\n    return(\r\n        <img alt={'loading'} style={{position: 'absolute', transform: 'translate(-50%)', top: '50%', left: '50%'}} src={preloader} />\r\n    )\r\n}","import { StateType } from './../../../redux/redux-store';\r\n\r\nexport const getAllUsers = (state:StateType) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getTotalUsersCount = (state:StateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getPageSize = (state:StateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getCurrentPage = (state:StateType) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state:StateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFilter = (state:StateType) => {\r\n    return state.usersPage.filter;\r\n}","import React from 'react'\r\nimport styles from './UserItem.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const UserItem = (props) => {\r\n    return (\r\n        <div className={styles.sectionUserItem}>\r\n            <div className={styles.sectionUserItemLeft}>\r\n                <NavLink to={props.pathCreator(props.id)}><div className={styles.sectionUserItemLeftImg}></div></NavLink>\r\n                <div>{props.followed ? <button onClick={()=>{props.unFollow(props.id)}} className={styles.sectionUserItemLeftButton}>Unfollow</button> : <button onClick={()=> {props.follow(props.id)}} className={styles.sectionUserItemLeftButton}>Follow</button>}</div>\r\n            </div>\r\n            <div className={styles.sectionUserItemDesc}>\r\n                <p className={styles.sectionUserItemDescTxt}>{props.name}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Field, Form, Formik } from \"formik\"\r\nimport React from \"react\"\r\nimport { FilterType } from \"../../../redux/users-reducer\"\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n    const errors = {}\r\n    return errors\r\n}\r\n\r\ntype UsersSearchFormDataType = {\r\n    term: string\r\n    friends: string | boolean | null\r\n}\r\ntype PropsType = {\r\n    filter: FilterType\r\n    setFilter: (filter: FilterType) => void\r\n}\r\n\r\nexport const UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const submit = (values: UsersSearchFormDataType, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }): void => {\r\n        if (values.friends === \"null\") values.friends = null\r\n        if (values.friends === \"true\") values.friends = true\r\n        if (values.friends === \"false\") values.friends = false\r\n        props.setFilter({ term: values.term, friends: values.friends as boolean | null })\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ term: props.filter.term, friends: props.filter.friends }}\r\n            validate={usersSearchFormValidate}\r\n            onSubmit={submit}\r\n        >\r\n            {({ isSubmitting }) => (\r\n                <Form>\r\n                    <Field type=\"text\" name=\"term\" placeholder=\"Name should have:\" />\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Find\r\n                    </button>\r\n                    <Field as=\"select\" name=\"friends\">\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only friends</option>\r\n                        <option value=\"false\">Only not friends</option>\r\n                    </Field>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { FilterType, follow, unFollow } from '../../redux/users-reducer'\r\nimport { getAllUsers, getCurrentPage, getFilter, getPageSize, getTotalUsersCount } from '../common/Selectors/users-selectors'\r\nimport styles from './Users.module.css'\r\nimport { UserItem } from './UsersItem/UserItem'\r\nimport { UsersSearchForm } from './UsersSearchForm/UsersSearchForm'\r\n\r\ntype PropsType = {\r\n    myGetUsers: (pageNumber: number, filter: FilterType | {}) => void\r\n}\r\n\r\nexport const Users: React.FC<PropsType> = (props) => {\r\n\r\n    let users = useSelector(getAllUsers)\r\n    let totalUsersCount = useSelector(getTotalUsersCount)\r\n    let pageSize = useSelector(getPageSize)\r\n    let currentPage = useSelector(getCurrentPage)\r\n    let filter = useSelector(getFilter)\r\n\r\n    let history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const myFollow = (id: number) => { dispatch(follow(id)) }\r\n    const myUnFollow = (id: number) => { dispatch(unFollow(id)) }\r\n    const setCurrentPage = (pageNumber: number) => { props.myGetUsers(pageNumber, {}) }\r\n    const setFilter = (filter: FilterType) => { props.myGetUsers(1, filter) }\r\n\r\n    useEffect(()=>{\r\n        history.push({\r\n            pathname: \"/users\",\r\n            search: `?term=${filter.term}&friends=${filter.friends}&page=${currentPage}`\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n    let firstUser = currentPage * pageSize - 10\r\n    let lastUser = currentPage * pageSize\r\n    let currentUsers = users.slice(firstUser, lastUser)\r\n    let pages = []\r\n\r\n    for (let i: number = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let pathCreator = (id: number) => `/profile/${id}`\r\n\r\n    return (\r\n        <div className={styles.sectionUsers}>\r\n            <UsersSearchForm filter={filter} setFilter={setFilter} />\r\n            {\r\n                currentUsers.length !== 0\r\n                    ?\r\n                    currentUsers.map((asd) => <UserItem pathCreator={pathCreator} follow={myFollow} unFollow={myUnFollow} key={asd.id} id={asd.id} name={asd.name} followed={asd.followed} />)\r\n                    :\r\n                    <p>Пользователей с такими параметрами нет</p>\r\n            }\r\n            <ul className={styles.sectionUsersList}>\r\n                {pages.map(n => {\r\n                    return currentPage === n ? <li key={n} className={styles.bold}>{n}</li> : <li key={n} onClick={() => setCurrentPage(n)} className={styles.sectionUsersListLi}>{n}</li>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FilterType, getUsers } from '../../redux/users-reducer'\r\nimport { Preloader } from '../common/Preloader/Preloader'\r\nimport { getIsFetching } from '../common/Selectors/users-selectors'\r\nimport { Users } from './Users'\r\n\r\nconst UsersComponent: React.FC<{}> = (props) => {\r\n\r\n    let isFetching = useSelector(getIsFetching)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const myGetUsers = (pageNumber: number, filter: FilterType | {}) => { dispatch(getUsers(pageNumber, filter)) }\r\n\r\n    useEffect(() => {\r\n        myGetUsers(1, {})\r\n    }, []);\r\n\r\n    return (\r\n        isFetching ? <Preloader /> : <Users myGetUsers={myGetUsers} />\r\n    )\r\n}\r\n\r\nexport default UsersComponent;"],"sourceRoot":""}