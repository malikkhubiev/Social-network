{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/Profile.module.css","components/Header/Header.module.css","components/Profile/Person/Person.module.css","DATA/authDATA.js","DATA/usersDATA.js","api/api.js","components/NavBar/NavBar.module.css","serviceWorker.js","redux/navbar-reducer.js","redux/auth-reducer.js","redux/redux-store.js","components/NavBar/FriendsItem/FriendsItem.jsx","components/NavBar/NavBar.jsx","components/Profile/Person/PersonStatus.jsx","images/brain.jpg","components/Profile/Person/Person.jsx","utils/validators.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","images/logo.png","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","hoc/withSuspense.js","App.js","index.js","redux/profile-reducer.js","components/Profile/MyPosts/MyPosts.module.css","components/common/FormsControlls/FormsControlls.jsx","components/Profile/MyPosts/Post/Post.module.css","redux/users-reducer.js","components/NavBar/FriendsItem/FriendsItem.module.css","components/Login/Login.module.css","components/common/FormsControlls/FormsControlls.module.css"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","module","exports","authData","name","login","password","rememberMe","mainUser","id","aboutMe","status","lookingForAJob","isMainUser","posts","shouldDialogBoxBeOpened","users","followed","message","likes","messages","usersAPI","addPost","postMessage","length","changeStatus","getUser","userId","profile","usersData","map","user","getMainUser","getUsers","follow","followedUserId","unFollow","sendMessage","sendedMessage","searchedUser","push","logIn","loginData","callBack","counter","obj","Boolean","window","location","hostname","match","initialState","friends","navbarReducer","SET_AUTH_USER_DATA","REM_AUTH_USER_DATA","authReducer","action","type","data","reducers","combineReducers","profilePage","profileReducer","navbarPage","usersPage","usersReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","FriendsItem","className","f","friendsItem","friendsItemImg","friendsItemName","NavBar","friendsElements","key","n","nav","list","activeClassName","newCl","friendsHeader","friendsItems","PersonStatus","useState","editMode","setEditMode","setStatus","person","personStatus","onDoubleClick","onChange","e","text","target","value","autoFocus","onBlur","Person","personTopimg","personData","src","ava","alt","personDataAva","personDataDesc","personDataDescName","personDataDescDesc","required","Post","p","postsPost","postsPostImg","postsPostTxt","postsPostLike","maxLength","maxLengthCreator","AddNewPostFormRedux","reduxForm","onSubmit","handleSubmit","Field","validate","component","Input","placeholder","postsMenuSend","MyPosts","postsElements","reverse","postsArea","postsMenu","postsMenuHeader","postText","postsHeader","MyPostsContainer","Profile","Fragment","withRouter","params","useEffect","undefined","mainContent","Header","h","header","logo","onClick","LogoutSanka","dispatch","LoginReduxForm","style","rem","summaryError","error","LoginContainer","LoginSanka","formData","result","prom","userName","setAuthUserData","stopSubmit","_error","sectionLogin","withSuspense","Suspense","fallback","DialogsContainer","React","lazy","UsersContainer","App","getState","exact","path","render","rerenderEntireTree","ReactDOM","basename","process","document","getElementById","subscribe","navigator","serviceWorker","ready","then","registration","unregister","catch","console","CHANGE_USER_DATA","SET_USER_PROFILE","changeUserData","setUserProfile","post","input","meta","hasError","touched","styles","formDiv","SET_USERS","SET_TOTAL_USERS_COUNT","SET_CURRENT_PAGE","TOGGLE_IS_FETCHING","totalUsersCount","pageSize","currentPage","isFetching","setUsers","toggleIsFetching","totalCount","setPage","pageNumber","setCurrentPage"],"mappings":"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","file":"static/js/main.1dd1ecd3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to='/login' />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContent\":\"Profile_mainContent__F8CjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__fEKkO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"person\":\"Person_person__1yJZw\",\"personTopimg\":\"Person_personTopimg__3oi_T\",\"personData\":\"Person_personData__2iTBv\",\"personDataAva\":\"Person_personDataAva__20fKt\",\"personDataDesc\":\"Person_personDataDesc__3UbNJ\",\"personDataDescName\":\"Person_personDataDescName__2x5K-\",\"personStatus\":\"Person_personStatus__1zEh5\",\"personDataDescDesc\":\"Person_personDataDescDesc__WEane\"};","let authData = [\r\n    {\r\n        name: \"Malik Khubiev\",\r\n        login: 'admin',\r\n        password: 'admin',\r\n        rememberMe: false,\r\n    },\r\n];\r\n\r\nexport default authData;","export const mainUser = {\r\n    id: 'mainUser',\r\n    name: \"Malik\",\r\n    aboutMe: 'Я Front-end разработчик',\r\n    status: \"Double click me!\",\r\n    lookingForAJob: true,\r\n    isMainUser: true,\r\n    posts: [],\r\n    shouldDialogBoxBeOpened: false,\r\n}\r\nconst users = [\r\n    {\r\n        id: 0,\r\n        name: \"Alex\",\r\n        aboutMe: 'Давайте жить дружно',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: true,\r\n        followed: false,\r\n        posts: [\r\n            { id: 0, message: \"Hi!\", likes: 5 },\r\n            { id: 1, message: \"Life is so beautiful\", likes: 12 },\r\n        ],\r\n        messages: [\r\n            { id: 0, message: \"Hi!\"},\r\n            { id: 1, message: \"How are you?\"},\r\n        ],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 1,\r\n        name: 'Billy',\r\n        aboutMe: 'Доброта спасёт мир!!!',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: true,\r\n        followed: false,\r\n        posts: [\r\n            { id: 0, message: \"DH is one of the best serials\", likes: 25 },\r\n            { id: 1, message: \"New song...That's good!\", likes: 122 },\r\n        ],\r\n        messages: [\r\n            { id: 0, message: \"Have a great day!\"},\r\n        ],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Cameron',\r\n        aboutMe: 'У меня вышел новый альбом!!!',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: true,\r\n        followed: false,\r\n        posts: [\r\n            { id: 0, message: \"Have a great day!!!\", likes: 15 },\r\n        ],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Adrianne',\r\n        aboutMe: 'Каждый день прыгю с парашютом, присоединяйтесь',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: true,\r\n        followed: false,\r\n        posts: [\r\n            { id: 0, message: \"American atmosphere\", likes: 213 },\r\n            { id: 1, message: \"Don't drink coffee\", likes: -5 },\r\n            { id: 2, message: \"Last post wasn't mine\", likes: 5 },\r\n        ],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Robert',\r\n        aboutMe: 'Снял 3 фильма, из них 4 получили оскара :)',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: false,\r\n        followed: true,\r\n        posts: [],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Alan',\r\n        aboutMe: 'Физкульт привет, кому составить план тренировок - пишите в личку',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: true,\r\n        followed: false,\r\n        posts: [],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Hugh',\r\n        aboutMe: 'Бесконечность не предел !!!',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: false,\r\n        followed: true,\r\n        posts: [],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 7,\r\n        name: 'Amanda',\r\n        aboutMe: 'Люблю рисовать, сегодня отличная погода для пейзажа',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: false,\r\n        followed: false,\r\n        posts: [],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 8,\r\n        name: 'Justin',\r\n        aboutMe: 'Умение перелезать через заборы - показатель интеллекта',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: false,\r\n        followed: true,\r\n        posts: [],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 9,\r\n        name: 'Peter',\r\n        aboutMe: 'С наступающим моим днём рождения ;)',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: true,\r\n        followed: true,\r\n        posts: [],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 10,\r\n        name: 'Max',\r\n        aboutMe: 'Области тьмы один из лучших сериалов, всем советую!!!',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: true,\r\n        followed: true,\r\n        posts: [],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 11,\r\n        name: 'John',\r\n        aboutMe: 'Так сладок мед, что, наконец, он горек. Избыток вкуса убивает вкус.',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: true,\r\n        followed: false,\r\n        posts: [],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n];\r\n\r\nexport default users;","import authData from '../DATA/authDATA';\r\nimport usersData from '../DATA/usersDATA';\r\nimport { mainUser } from '../DATA/usersDATA';\r\n\r\nexport const usersAPI = {\r\n    addPost(postMessage) {\r\n        let message = postMessage;\r\n        let id = mainUser.posts.length;\r\n        mainUser.posts = [...mainUser.posts, { id, message, likes: 100 }];\r\n        return mainUser;\r\n    },\r\n    changeStatus(status) {\r\n        mainUser.status = status;\r\n        return mainUser;\r\n    },\r\n    getUser(userId) {\r\n        let profile;\r\n        usersData.map(user => {\r\n            if (user.id === +userId) profile = user;\r\n        });\r\n        return profile;\r\n    },\r\n    getMainUser() {\r\n        return mainUser;\r\n    },\r\n    getUsers() {\r\n        return usersData;\r\n    },\r\n    follow(followedUserId) {\r\n        usersData.map(user => user.id === followedUserId ? user.followed = true : 0);\r\n        return usersData;\r\n    },\r\n    unFollow(followedUserId) {\r\n        usersData.map(user => user.id === followedUserId ? user.followed = false : 0);\r\n        return usersData;\r\n    },\r\n    sendMessage(id, sendedMessage) {\r\n        let searchedUser;\r\n        usersData.map(user=>{\r\n            if(user.id === id){\r\n                user.messages.push({ id: user.messages.length, message: sendedMessage});\r\n                searchedUser = user;\r\n            }\r\n        });\r\n        return searchedUser;\r\n    },\r\n    logIn(loginData, callBack) {\r\n        let counter = 0;\r\n        authData.map(obj => {\r\n            if (obj.login === loginData.login && obj.password === loginData.password) {\r\n                callBack(true, obj.name);\r\n            } else {\r\n                counter++;\r\n            }\r\n        });\r\n        if (counter === authData.length) {\r\n            callBack('Wrong Email or Password');\r\n        }\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__bQR7m\",\"list\":\"NavBar_list__2DAXM\",\"friends\":\"NavBar_friends__2zqJ9\",\"friendsHeader\":\"NavBar_friendsHeader__3DPFc\",\"friendsItems\":\"NavBar_friendsItems__3XaP6\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","let initialState = {\r\n    friends: [\r\n        { id: 1, name: \"Andrey\" },\r\n        { id: 2, name: \"Zabit\" },\r\n        { id: 3, name: \"Khabib\" }\r\n    ]\r\n}\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\nexport default navbarReducer;","import { stopSubmit } from 'redux-form';\r\nimport { usersAPI } from './../api/api';\r\n\r\nconst SET_AUTH_USER_DATA = 'SET-AUTH-USER-DATA';\r\nconst REM_AUTH_USER_DATA = 'REM-AUTH-USER-DATA';\r\n\r\nlet initialState = {\r\n    name: null,\r\n    login: null,\r\n    password: null,\r\n    isAuth: true,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true,\r\n            }\r\n        };\r\n        case REM_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n            }\r\n        };\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (login, password, name) => {\r\n    return ({ \r\n        type: SET_AUTH_USER_DATA,\r\n        data: { login, password, name } \r\n    })\r\n};\r\nexport const remAuthUserData = () => {\r\n    return ({\r\n        type: REM_AUTH_USER_DATA\r\n    })\r\n};\r\n\r\nexport const LoginSanka = (formData) => dispatch => {\r\n    let result;\r\n    let name;\r\n    function callBack(prom, userName) {\r\n        result = prom;\r\n        name = userName;\r\n    }\r\n    usersAPI.logIn(formData, callBack);\r\n    if (result === true) {\r\n        dispatch(setAuthUserData(formData.login, formData.password, name));\r\n    } else {\r\n        dispatch(stopSubmit('login', { _error: result }));\r\n    }\r\n}\r\n\r\nexport const LogoutSanka = () => (dispatch) => {\r\n    dispatch(remAuthUserData());\r\n}\r\n\r\nexport default authReducer;","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport navbarReducer from './navbar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    navbarPage: navbarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport f from './FriendsItem.module.css';\r\nconst FriendsItem = (props) => {\r\n    return (\r\n        <div className={f.friendsItem}>\r\n            <div className={f.friendsItemImg}></div>\r\n            <p className={f.friendsItemName}>{props.name}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default FriendsItem;","import React from 'react';\r\nimport n from './NavBar.module.css';\r\nimport FriendsItem from './FriendsItem/FriendsItem';\r\nimport { NavLink } from 'react-router-dom';\r\nconst NavBar = (props) => {\r\n    let friends = props.friends;\r\n    let friendsElements = friends.map(f=><FriendsItem key={f.id} name={f.name} />);\r\n    return (\r\n        <nav className={n.nav}>\r\n            <ul className={n.list}>\r\n                <NavLink activeClassName={n.newCl} to=\"/profile\"><li>Profile</li></NavLink>\r\n                <NavLink activeClassName={n.newCl} to=\"/dialogs\"><li>Dialogs</li></NavLink>\r\n                <NavLink activeClassName={n.newCl} to=\"/users\"><li>Users</li></NavLink>\r\n            </ul>\r\n            <div className={n.friends}>\r\n                <p className={n.friendsHeader}>Friends</p>\r\n                <div className={n.friendsItems}>\r\n                    {friendsElements}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default NavBar;","import React, { useState } from 'react';\r\nimport person from './Person.module.css';\r\nconst PersonStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    let changeStatus = (e) => {\r\n        let text = e.target.value;\r\n        setStatus(text);\r\n    }\r\n    let activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    let deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.changeStatus(status);\r\n    }\r\n    return (\r\n        <div className={person.personStatus}>\r\n            {editMode === false?\r\n            <div>\r\n                <p onDoubleClick={activateEditMode}>{status}</p>\r\n            </div>\r\n            :\r\n            <div>\r\n                <input onChange={e=>changeStatus(e)} autoFocus={true} onBlur={deActivateEditMode} value={status} />\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\nexport default PersonStatus;","export default __webpack_public_path__ + \"static/media/brain.87fe3c8f.jpg\";","import React from 'react';\r\nimport person from './Person.module.css';\r\nimport PersonStatus from './PersonStatus';\r\nimport ava from './../../../images/brain.jpg';\r\nconst Person = (props) => {\r\n    return (\r\n        <div className={person.person}>\r\n            <div className={person.personTopimg}></div>\r\n            <div className={person.personData}>\r\n                <img src={ava} alt={'avatar'} className={person.personDataAva}/>\r\n                <div className={person.personDataDesc}>\r\n                    <p className={person.personDataDescName}>{props.profile.name}</p>\r\n                    {props.profile.isMainUser?<PersonStatus {...props}/>:<p className={person.personDataDescDesc}>{props.profile.status}</p>}\r\n                    <div className={person.personDataDescDesc}><b>Обо мне:</b> {props.profile.aboutMe}</div>\r\n                    <div className={person.personDataDescDesc}><b>Сведения о работе:</b>{props.profile.lookingForAJob ? <p className={person.personDataDescDesc}>В поиске работы</p> : <p className={person.personDataDescDesc}>У меня отличная работа</p>}</div>\r\n                    <div className={person.personDataDescDesc}><b>Образование:</b> RSEU Rinh</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Person;","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","import React from 'react';\r\nimport p from './Post.module.css';\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={p.postsPost}>\r\n            <div className={p.postsPostImg}></div>\r\n            <p className={p.postsPostTxt}>{props.message}</p>\r\n            <p className={p.postsPostLike}>like: {props.likes}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators';\r\nimport { Input } from '../../common/FormsControlls/FormsControlls';\r\nimport p from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst maxLength = maxLengthCreator(30);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field validate={[required, maxLength]} name='postText' component={Input} placeholder='your news...' />\r\n            <button className={p.postsMenuSend}>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'AddNewPostForm'})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n    let posts = [...props.posts];\r\n    let postsElements = posts.reverse().map(p => <Post key={p.id} likes={p.likes} message={p.message} />);\r\n    let addPost = (value) => {\r\n        props.addPost(value.postText);\r\n    }\r\n    return (\r\n        <div className={p.postsArea}>\r\n            {props.isMainUser?<div className={p.postsMenu}>\r\n                <p className={p.postsMenuHeader}>My posts</p>\r\n                <AddNewPostFormRedux onSubmit={addPost}/>\r\n            </div>:null}\r\n            <div className={p.posts}>\r\n                {postsElements.length?postsElements:<p className={p.postsHeader}>This user has not posted anything</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPost } from './../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isMainUser: state.profilePage.profile.isMainUser,\r\n        posts: state.profilePage.profile.posts,\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport Person from './Person/Person';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nconst Profile = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Person {...props} profile={props.profile} />\r\n            <MyPostsContainer />\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Profile;","import React, { useEffect } from 'react';\r\nimport p from './Profile.module.css';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUser, changeStatus } from './../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst ProfileContainer = (props) => {\r\n    let userId = props.match.params.userId;\r\n    let getUser = props.getUser;\r\n    useEffect(() => {\r\n        if (userId !== undefined) {\r\n            getUser(userId);\r\n        }else{\r\n            getUser('Default');\r\n        }\r\n    }, [userId, getUser]);\r\n    return (\r\n        <div className={p.mainContent}>\r\n            <Profile {...props} />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.profile.status,\r\n});\r\nexport default compose(\r\n    connect(mapStateToProps, { getUser, changeStatus }),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer)","export default __webpack_public_path__ + \"static/media/logo.3597d19d.png\";","import React from 'react';\r\nimport h from './Header.module.css';\r\nimport logo from './../../images/logo.png';\r\nimport { NavLink } from 'react-router-dom';\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={h.header}>\r\n            <img src={logo} alt={'logo'} />\r\n            {props.isAuth ? <div><p>{props.name}</p><button onClick={props.LogoutSanka}>Log out</button></div> : <NavLink to='/login'><p>Log in</p></NavLink>} \r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { LogoutSanka } from '../../redux/auth-reducer';\r\nimport { getUsers } from '../../redux/users-reducer';\r\nimport Header from './Header';\r\n\r\nconst HeaderContainer = (props) => {\r\n    let getUsers = props.getUsers;\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, [getUsers]);\r\n\r\n    return (\r\n        <Header {...props} />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    name: state.auth.name,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUsers, LogoutSanka })(HeaderContainer);","import React from 'react';\r\nimport style from './Login.module.css';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport { Input } from '../common/FormsControlls/FormsControlls';\r\nimport { required } from '../../utils/validators';\r\nimport { LoginSanka } from '../../redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder='Login' name={'login'} validate={[required]} component={Input} />\r\n            </div>\r\n            <div>\r\n                <Field placeholder='Password' name={'password'} validate={[required]} component={Input} />\r\n            </div>\r\n            <div>\r\n                <Field type='checkbox' name={'rememberMe'} className={style.rem} component={'input'} /> remember me\r\n                </div>\r\n            <div>\r\n                <button>Log in</button>\r\n            </div>\r\n            <div className={style.summaryError}>\r\n                {props.error?<p>{props.error}</p>:''}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm); \r\n\r\nconst Login = (props) => {\r\n    let mySubmit = (formData) => {\r\n        props.LoginSanka(formData);\r\n    }\r\n    if(props.isAuth){\r\n        return <Redirect to='/profile' />\r\n    }\r\n    return (\r\n        <div className={style.sectionLogin}>\r\n            <p>Login</p>\r\n            <p>Hint: login and password - admin</p>\r\n            <LoginReduxForm onSubmit={mySubmit} />\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nconst LoginContainer = connect(mapStateToProps, {LoginSanka})(Login);\r\n\r\nexport default LoginContainer;","import React from 'react';\r\n\r\nconst withSuspense = (Component) => {\r\n    return (props) => (\r\n        <React.Suspense fallback={<div>...Loading</div>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    )\r\n}\r\n\r\nexport default withSuspense;","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport withSuspense from './hoc/withSuspense';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <div className=\"appWrapper\">\r\n      <HeaderContainer />\r\n      <div className=\"double\">\r\n        <NavBar friends={props.store.getState().navbarPage.friends} />\r\n        <Switch>\r\n          <Route exact path='/' render={() => <Redirect to='/profile' />} />\r\n          <Route path='/login' render={() => <Login />} />\r\n          <Route path='/profile/:userId?' render={() => <div className='rightSide'><ProfileContainer /></div>} />\r\n          <Route path='/dialogs/:userId?' render={withSuspense(DialogsContainer)} />\r\n          <Route path='/users' render={withSuspense(UsersContainer)} />\r\n          <Route path='*' render={() => <div className='rightSide'>404 Not found</div>} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;","import * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\n\r\nlet rerenderEntireTree = (state) => {\r\n  ReactDOM.render(\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n      <Provider store={store}>\r\n        <App store={store}/>\r\n      </Provider>\r\n    </HashRouter>, document.getElementById('root')\r\n  );\r\n}\r\n\r\nstore.subscribe(() => {\r\n  let state = store.getState();\r\n  rerenderEntireTree(state);\r\n});\r\n\r\nrerenderEntireTree(store.state);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { usersAPI } from './../api/api';\r\n\r\nconst CHANGE_USER_DATA = 'CHANGE_USER_DATA';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\n\r\nlet initialState = {\r\n    profile: {\r\n        id: 0,\r\n        name: \"Malik\",\r\n        aboutMe: 'Я Front-end разработчик',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: true,\r\n        isMainUser: true,\r\n        posts: [],\r\n        messages: [],\r\n        shouldDialogBoxBeOpened: false,\r\n    },\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_PROFILE: {\r\n            return{\r\n                ...state,\r\n                profile: action.profile,\r\n                posts: action.profile.posts,\r\n            }\r\n        }\r\n        case CHANGE_USER_DATA: {\r\n            return{\r\n                ...state,\r\n                profile: action.user\r\n            }\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const sendMessage = (id, message) => (dispatch) => {\r\n    let user = usersAPI.sendMessage(id, message);\r\n    dispatch(changeUserData(user));   \r\n}\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return{\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    }\r\n}\r\n\r\nexport const changeUserData = (user) => {\r\n    return{\r\n        type: CHANGE_USER_DATA,\r\n        user\r\n    }\r\n}\r\n\r\nexport const changeStatus = (status) => (dispatch) => {\r\n    let user = usersAPI.changeStatus(status);\r\n    dispatch(changeUserData(user));   \r\n}\r\n\r\nexport const addPost = (post) => (dispatch) => {\r\n    let user = usersAPI.addPost(post);\r\n    dispatch(changeUserData(user));\r\n}\r\n\r\nexport const getUser = (userId) => (dispatch) => {\r\n    if(userId === 'Default'){\r\n        let user = usersAPI.getMainUser();\r\n        dispatch(setUserProfile(user));\r\n    }else{\r\n        let user = usersAPI.getUser(userId);\r\n        dispatch(setUserProfile(user));    \r\n    }\r\n}\r\n\r\nexport default profileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsArea\":\"MyPosts_postsArea__bYvCV\",\"postsMenu\":\"MyPosts_postsMenu__2ldav\",\"postsMenuHeader\":\"MyPosts_postsMenuHeader__285tx\",\"postsMenuSend\":\"MyPosts_postsMenuSend__32gny\",\"posts\":\"MyPosts_posts__2Bijw\",\"postsHeader\":\"MyPosts_postsHeader__cRHWp\",\"postsPost\":\"MyPosts_postsPost__xvg7d\",\"postsPostImg\":\"MyPosts_postsPostImg__3I9h0\",\"postsPostTxt\":\"MyPosts_postsPostTxt__bp_J3\"};","import React from 'react';\r\nimport styles from './FormsControlls.module.css';\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={hasError?styles.error:styles.formDiv}>\r\n            <input {...input} {...props} />\r\n            {hasError?<span>{meta.error}</span>:null}\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsPost\":\"Post_postsPost__2OwkX\",\"postsPostImg\":\"Post_postsPostImg__12iBn\",\"postsPostTxt\":\"Post_postsPostTxt__2pdjC\",\"postsPostLike\":\"Post_postsPostLike__1nzJy\"};","import { usersAPI } from './../api/api';\r\n\r\nlet SET_USERS = 'SET-USERS';\r\nlet SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nlet SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nlet TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n        };\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount,\r\n            }\r\n        };\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber,\r\n            }\r\n        };\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        };\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const setUsers = (users) => { return { type: SET_USERS, users } };\r\nexport const setCurrentPage = (pageNumber) => { return { type: SET_CURRENT_PAGE, pageNumber } };\r\nexport const setTotalUsersCount = (totalCount) => { return { type: SET_TOTAL_USERS_COUNT, totalCount } };\r\nexport const toggleIsFetching = (isFetching) => { return { type: TOGGLE_IS_FETCHING, isFetching } };\r\n\r\nexport const getUsers = () => (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let users = usersAPI.getUsers();\r\n    dispatch(setUsers(users));\r\n    dispatch(setTotalUsersCount(users.length));\r\n    dispatch(toggleIsFetching(false));\r\n}\r\n\r\nexport const follow = (id) => (dispatch) => {\r\n    let users = usersAPI.follow(id);\r\n    dispatch(setUsers(users));\r\n}\r\n\r\nexport const unFollow = (id) => (dispatch) => {\r\n    let users = usersAPI.unFollow(id);\r\n    dispatch(setUsers(users));\r\n}\r\n\r\nexport const setPage = (pageNumber) => (dispatch) => {\r\n    dispatch(setCurrentPage(pageNumber));\r\n}\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsItem\":\"FriendsItem_friendsItem__1GzXE\",\"friendsItemImg\":\"FriendsItem_friendsItemImg__lt43M\",\"friendsItemName\":\"FriendsItem_friendsItemName__llYQG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionLogin\":\"Login_sectionLogin__2tzgq\",\"rem\":\"Login_rem__2BDXu\",\"summaryError\":\"Login_summaryError__3B1bs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formDiv\":\"FormsControlls_formDiv__AvjO5\",\"error\":\"FormsControlls_error__PqaDL\"};"],"sourceRoot":""}