{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/Person/Person.module.css","serviceWorker.js","redux/profile-reducer.js","api/api.js","redux/navbar-reducer.js","redux/redux-store.js","components/Profile/Person/PersonStatus.jsx","images/brain.jpg","components/Profile/Person/Person.jsx","utils/validators.js","components/common/FormsControlls/FormsControlls.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","hoc/withAuthRedirect.js","components/common/Selectors/profile-selectors.js","components/Profile/ProfileContainer.jsx","components/common/Selectors/auth-selectors.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","context/AuthContext.js","components/Login/Login.jsx","hooks(Yt)/http.hook.js","hooks(Yt)/auth.hook.js","App.js","index.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/common/FormsControlls/FormsControlls.module.css","components/Header/Header.module.css","components/Login/Login.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","myState","usersAPI","postMessage","state","message","id","profile","posts","length","likes","status","SET_AUTH_USER_DATA","REM_AUTH_USER_DATA","CHANGE_USER_DATA","initialState","name","login","password","aboutMe","lookingForAJob","isAuth","changeUserData","data","type","profileReducer","action","friends","navbarReducer","reducers","combineReducers","profilePage","navbarPage","usersPage","usersReducer","auth","authReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","PersonStatus","props","propsedInfo","propsedThunk","useState","editMode","setEditMode","info","setInfo","className","person","personStatus","onDoubleClick","onChange","e","text","target","value","changeInfo","autoFocus","onBlur","Person","statusProps","changeStatus","aboutProps","changeAboutMe","lookingProps","changeLooking","personTopimg","personData","src","ava","alt","personDataAva","personDataDesc","personDataDescName","personDataDescDesc","required","Input","input","meta","hasError","touched","error","styles","formDiv","CheckBox","Post","p","postsPost","postsPostImg","postsPostTxt","postsPostLike","maxLength","maxLengthCreator","AddNewPostFormRedux","reduxForm","onSubmit","handleSubmit","Field","validate","component","placeholder","postsMenuSend","MyPosts","postsElements","reverse","map","key","postsArea","postsMenu","postsMenuHeader","addPost","postText","postsHeader","MyPostsContainer","connect","post","dispatch","Profile","mapStateToProps","getProfile","looking","withRouter","Component","to","mainContent","getIsAuth","getUserName","Header","h","header","logo","onClick","remAuthUserData","getUsers","noop","AuthContext","createContext","token","userId","logout","isAuthentificated","LoginReduxForm","authMode","disabled","loading","style","summaryError","LoginContainer","setAuthUserData","setAuthMode","changeAuthMode","res","setLoading","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","ok","Error","clearError","useHttp","registerHandler","formData","loginHandler","console","log","useEffect","alert","useContext","sectionLogin","storageName","App","setToken","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","Provider","exact","path","render","rerenderEntireTree","ReactDOM","document","getElementById","subscribe","getState","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.18efc717.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContent\":\"Profile_mainContent__1ugrA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"person\":\"Person_person__dqu7b\",\"personTopimg\":\"Person_personTopimg__1oXv5\",\"personData\":\"Person_personData___TEmU\",\"personDataAva\":\"Person_personDataAva__32tJ_\",\"personDataDesc\":\"Person_personDataDesc__2PTCe\",\"personDataDescName\":\"Person_personDataDescName__3w5F6\",\"personStatus\":\"Person_personStatus__3xKwM\",\"personDataDescDesc\":\"Person_personDataDescDesc__1Prel\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { usersAPI } from '../api/api';\r\n\r\nconst SET_AUTH_USER_DATA = \"SET-AUTH-USER-DATA\";\r\nconst REM_AUTH_USER_DATA = \"REM-AUTH-USER-DATA\";\r\nconst CHANGE_USER_DATA = \"CHANGE_USER_DATA\";\r\n\r\nlet initialState = {\r\n    profile: {\r\n        name: null,\r\n        login: null,\r\n        password: null,\r\n        status: \"Life is wonderful\",\r\n        aboutMe: \"Hey, I'm a new user in TyppaTwitter\",\r\n        lookingForAJob: \"No\",\r\n        posts: [],\r\n        isAuth: false,\r\n    }\r\n}\r\nlet myState;\r\nconst profileReducer = (state = initialState, action) => {\r\n    myState = state;\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, ...action.data}\r\n            }\r\n        };\r\n        case REM_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n            }\r\n        };\r\n        case CHANGE_USER_DATA: {\r\n            return{\r\n                ...state,\r\n                profile: {...state.profile, ...action.data}\r\n            }\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = ({login, password}) => {\r\n    return ({\r\n        type: SET_AUTH_USER_DATA,\r\n        data: { login, password, name: login, isAuth: true } \r\n    })\r\n};\r\n\r\nexport const remAuthUserData = () => {\r\n    return ({\r\n        type: REM_AUTH_USER_DATA\r\n    })\r\n};\r\n\r\n// export const setUserProfile = (data) => {\r\n//     return{\r\n//         type: SET_USER_PROFILE,\r\n//         data\r\n//     }\r\n// }\r\n\r\nexport const changeUserData = (data) => {\r\n    return{\r\n        type: CHANGE_USER_DATA,\r\n        data\r\n    }\r\n}\r\n\r\n// export const sendMessage = (id, message) => (dispatch) => {\r\n//     let user = usersAPI.sendMessage(id, message);\r\n//     dispatch(changeUserData(user));   \r\n// }\r\n\r\nexport const changeStatus = (text) => (dispatch) => {\r\n    let status = usersAPI.changeStatus(text);\r\n    dispatch(changeUserData({status}));   \r\n}\r\n\r\nexport const changeAboutMe = (text) => (dispatch) => {\r\n    let aboutMe = usersAPI.changeStatus(text);\r\n    dispatch(changeUserData({aboutMe}));   \r\n}\r\n\r\nexport const changeLooking = (text) => (dispatch) => {\r\n    let looking = usersAPI.changeStatus(text);\r\n    dispatch(changeUserData({looking}));   \r\n}\r\n\r\nexport const addPost = (post) => (dispatch) => {\r\n    let posts = usersAPI.addPost(post, myState);\r\n    dispatch(changeUserData({posts}));\r\n}\r\n\r\n// export const getUser = (userId) => (dispatch) => {\r\n//     if(userId === 'Default'){\r\n//         let user = usersAPI.getMainUser();\r\n//         dispatch(setUserProfile(user));\r\n//     }else{\r\n//         let user = usersAPI.getUser(userId);\r\n//         dispatch(setUserProfile(user));    \r\n//     }\r\n// }\r\n\r\nexport default profileReducer;","import usersData from '../DATA/usersDATA';\r\nimport { mainUser } from '../DATA/usersDATA';\r\n\r\nexport const usersAPI = {\r\n    addPost(postMessage, state) {\r\n        let message = postMessage;\r\n        let id = state.profile.posts.length;\r\n        // mainUser.posts = [...mainUser.posts, { id, message, likes: 100 }];\r\n        let posts = [...state.profile.posts, {id, message, likes: 100}];\r\n        return posts;\r\n    },\r\n    changeStatus(status) {\r\n        // mainUser.status = status;\r\n        return status;\r\n    },\r\n    changeAboutMe(aboutMe) {\r\n        // mainUser.status = status;\r\n        return aboutMe;\r\n    },\r\n    changeLooking(looking) {\r\n        // mainUser.status = status;\r\n        return looking;\r\n    },\r\n    // getUser(userId) {\r\n    //     let profile;\r\n    //     usersData.map(user => {\r\n    //         if (user.id === +userId) profile = user;\r\n    //     });\r\n    //     return profile;\r\n    // },\r\n    // getMainUser() {\r\n    //     return mainUser;\r\n    // },\r\n    // getUsers() {\r\n    //     return usersData;\r\n    // },\r\n    // follow(followedUserId) {\r\n    //     usersData.map(user => user.id === followedUserId ? user.followed = true : 0);\r\n    //     return usersData;\r\n    // },\r\n    // unFollow(followedUserId) {\r\n    //     usersData.map(user => user.id === followedUserId ? user.followed = false : 0);\r\n    //     return usersData;\r\n    // },\r\n    // sendMessage(id, sendedMessage) {\r\n    //     let searchedUser;\r\n    //     usersData.map(user => {\r\n    //         if (user.id === id) {\r\n    //             user.messages.push({ id: user.messages.length, message: sendedMessage });\r\n    //             searchedUser = user;\r\n    //         }\r\n    //     });\r\n    //     return searchedUser;\r\n    // }\r\n}","let initialState = {\r\n    friends: [\r\n        { id: 1, name: \"Andrey\" },\r\n        { id: 2, name: \"Zabit\" },\r\n        { id: 3, name: \"Khabib\" }\r\n    ]\r\n}\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\nexport default navbarReducer;","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport navbarReducer from './navbar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    navbarPage: navbarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React, { useState } from 'react';\r\nimport person from './Person.module.css';\r\nconst PersonStatus = (props) => {\r\n    let propsedInfo = props[0];\r\n    let propsedThunk = props[1];\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [info, setInfo] = useState(propsedInfo);\r\n    let changeInfo = (e) => {\r\n        let text = e.target.value;\r\n        setInfo(text);\r\n    }\r\n    let activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    let deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        propsedThunk(info);\r\n    }\r\n    return (\r\n        <div className={person.personStatus}>\r\n            {editMode === false?\r\n            <div>\r\n                <p onDoubleClick={activateEditMode}>{info}</p>\r\n            </div>\r\n            :\r\n            <div>\r\n                <input onChange={e=>changeInfo(e)} autoFocus={true} onBlur={deActivateEditMode} value={info} />\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\nexport default PersonStatus;","export default __webpack_public_path__ + \"static/media/brain.87fe3c8f.jpg\";","import React from 'react';\r\nimport person from './Person.module.css';\r\nimport PersonStatus from './PersonStatus';\r\nimport ava from './../../../images/brain.jpg';\r\nconst Person = (props) => {\r\n    let statusProps = [props.profile.status, props.changeStatus];\r\n    let aboutProps = [props.profile.aboutMe, props.changeAboutMe];\r\n    let lookingProps = [props.profile.lookingForAJob, props.changeLooking];\r\n    return (\r\n        <div className={person.person}>\r\n            <div className={person.personTopimg}></div>\r\n            <div className={person.personData}>\r\n                <img src={ava} alt={'avatar'} className={person.personDataAva}/>\r\n                <div className={person.personDataDesc}>\r\n                    <p className={person.personDataDescName}>{props.profile.name}</p>\r\n                    <div className={person.personDataDescDesc}><b>Статус: </b><PersonStatus {...statusProps}/></div>\r\n                    <div className={person.personDataDescDesc}><b>Обо мне: </b><PersonStatus {...aboutProps}/></div>\r\n                    <div className={person.personDataDescDesc}><b>Сведения о работе: </b><PersonStatus {...lookingProps}/></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Person;","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","import React from 'react';\r\nimport styles from './FormsControlls.module.css';\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={hasError ? styles.error : styles.formDiv}>\r\n            <input {...input} {...props} />\r\n            {hasError ? <span>{meta.error}</span> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const CheckBox = ({input, meta, ...props}) => (\r\n    <div className={styles.formDiv}>\r\n        remember me?\r\n        <input {...input} {...props} type=\"checkbox\" />\r\n    </div>\r\n)","import React from 'react';\r\nimport p from './Post.module.css';\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={p.postsPost}>\r\n            <div className={p.postsPostImg}></div>\r\n            <p className={p.postsPostTxt}>{props.message}</p>\r\n            <p className={p.postsPostLike}>like: {props.likes}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators';\r\nimport { Input } from '../../common/FormsControlls/FormsControlls';\r\nimport p from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst maxLength = maxLengthCreator(30);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field validate={[required, maxLength]} name='postText' component={Input} placeholder='your news...' />\r\n            <button className={p.postsMenuSend}>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'AddNewPostForm'})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n    let posts = [...props.posts];\r\n    let postsElements = posts.reverse().map(p => <Post key={p.id} likes={p.likes} message={p.message} />);\r\n    let addPost = (value) => {\r\n        props.addPost(value.postText);\r\n    }\r\n    return (\r\n        <div className={p.postsArea}>\r\n            <div className={p.postsMenu}>\r\n                <p className={p.postsMenuHeader}>My posts</p>\r\n                <AddNewPostFormRedux onSubmit={addPost}/>\r\n            </div>\r\n            <div className={p.posts}>\r\n                {postsElements.length?postsElements:<p className={p.postsHeader}>You haven't posted anything yet</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPost } from './../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.profile.posts,\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport Person from './Person/Person';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nconst Profile = (props) => {\r\n    return (\r\n        <>\r\n            <Person {...props} profile={props.profile} />\r\n            <MyPostsContainer />\r\n        </>\r\n    )\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.profilePage.profile.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to='/login' />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent;\r\n}","export const getProfile = (state) => {\r\n    return state.profilePage.profile;\r\n}\r\n\r\nexport const getStatus = (state) => {\r\n    return state.profilePage.profile.status;\r\n}\r\n\r\nexport const getUserId = (state) => {\r\n    return state.profilePage.id;\r\n}\r\n\r\nexport const getMessages = (state) => {\r\n    return state.profilePage.messages;\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport p from './Profile.module.css';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\n// import { getUser, changeStatus } from './../../redux/profile-reducer';\r\nimport { changeStatus, changeAboutMe, changeLooking } from './../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getProfile } from '../common/Selectors/profile-selectors';\r\n\r\nconst ProfileContainer = (props) => {\r\n    // let userId = props.match.params.userId;\r\n    // let getUser = props.getUser;\r\n    // useEffect(() => {\r\n    //     if (userId !== undefined) {\r\n    //         getUser(userId);\r\n    //     }else{\r\n    //         getUser('Default');\r\n    //     }\r\n    // }, [userId, getUser]);\r\n    return (\r\n        <div className={p.mainContent}>\r\n            <Profile {...props} />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: getProfile(state),\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { changeStatus, changeAboutMe, changeLooking }),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer);","export const getIsAuth = (state) => {\r\n    return state.profilePage.profile.isAuth;\r\n}\r\n\r\nexport const getUserName = (state) => {\r\n    return state.profilePage.profile.name;\r\n}","import React from 'react';\r\nimport h from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={h.header}>\r\n            <p className={h.logo}>TyppaTwitter</p>\r\n            {props.isAuth ? <div><p>{props.name}</p><button onClick={props.remAuthUserData}>Log out</button></div> : <NavLink to='/login'><p>Log in</p></NavLink>} \r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { remAuthUserData } from '../../redux/auth-reducer';\r\nimport { getUsers } from '../../redux/users-reducer';\r\nimport { getIsAuth, getUserName } from '../common/Selectors/auth-selectors';\r\nimport Header from './Header';\r\n\r\nconst HeaderContainer = (props) => {\r\n    return (\r\n        <Header {...props} />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: getIsAuth(state),\r\n    name: getUserName(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUsers, remAuthUserData })(HeaderContainer);","import { createContext } from \"react\";\r\n\r\nfunction noop(){}\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthentificated: false\r\n})","import React, { useContext, useEffect, useState } from 'react';\r\nimport style from './Login.module.css';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport { CheckBox, Input } from '../common/FormsControlls/FormsControlls';\r\nimport { required } from '../../utils/validators';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getIsAuth } from '../common/Selectors/auth-selectors';\r\n// import Cookies from 'js-cookie';\r\nimport { useHttp } from '../../hooks(Yt)/http.hook';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { setAuthUserData } from '../../redux/profile-reducer';\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder='Login' name={'login'} validate={[required]} component={Input} />\r\n            </div>\r\n            <div>\r\n                <Field placeholder='Password' name={'password'} validate={[required]} component={Input} />\r\n            </div>\r\n\r\n            {props.authMode === 'login'?\r\n            <div>\r\n                <Field placeholder='' name={'rememberMe'} validate={[]} component={CheckBox} />\r\n            </div>:''}\r\n            \r\n            <div>\r\n                <button disabled={props.loading}>Enter</button>\r\n            </div>\r\n            <div className={style.summaryError}>\r\n                {props.error?<p>{props.error}</p>:''}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm); \r\n\r\nconst Login = (props) => {\r\n\r\n    let [authMode, setAuthMode] = useState('login'); \r\n    let changeAuthMode = res => setAuthMode(res);\r\n\r\n    let mySubmit = (formData) => {\r\n        if(authMode === \"register\"){\r\n            registerHandler(formData);\r\n        }else if(authMode === \"login\"){\r\n            loginHandler(formData);\r\n        }\r\n    }\r\n\r\n    // Auto Autent\r\n    // if(Cookies.get('authorized') === 'true'){\r\n    //     let login = Cookies.get('login');\r\n    //     let password = Cookies.get('password');\r\n    //     let rememberMe = true;\r\n    //     mySubmit({login, password, rememberMe});\r\n    // }\r\n\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const registerHandler = async(formData) => {\r\n        try {\r\n            const data = await request(\"/api/auth/register\", \"POST\", {...formData});\r\n        } catch (e) {}\r\n    }\r\n    const loginHandler = async(formData) => {\r\n        try {\r\n            const data = await request(\"/api/auth/login\", \"POST\", {...formData});\r\n            console.log(data);\r\n            auth.login(data.token, data.userId);\r\n            props.setAuthUserData(formData);\r\n        } catch (e) {}\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (error !== null) alert(error);\r\n        clearError();\r\n    }, [error, clearError]);\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    if(props.isAuth){\r\n        return <Redirect to='/profile' />\r\n    }\r\n\r\n    return (\r\n        <div className={style.sectionLogin}>\r\n            <p>{authMode}</p>\r\n            <div><button onClick={()=>changeAuthMode('login')}>Log in</button> / <button onClick={()=>changeAuthMode('register')}>Register now</button></div>\r\n            <LoginReduxForm loading = {loading} authMode={authMode} onSubmit={mySubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: getIsAuth(state),\r\n})\r\n\r\nconst LoginContainer = connect(mapStateToProps, {setAuthUserData})(Login);\r\n\r\nexport default LoginContainer;","import { useCallback, useState } from \"react\"\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async(url, method = \"GET\", body = null, headers = {}) => {\r\n        setLoading(true);\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body)\r\n                headers[\"Content-Type\"] = \"application/json\";\r\n            };\r\n            const response = await fetch(url, {method, body, headers});\r\n            const data = await response.json();\r\n            if(!response.ok){\r\n                throw new Error(data.message || \"Что-то пошло не так\");\r\n            }\r\n            setLoading(false);\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(()=>setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","import { useCallback, useEffect, useState } from \"react\"\r\n\r\nconst storageName = \"userData\"\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [userId, setUserId] = useState(null)\r\n\r\n    const login = useCallback((jwtToken, id)=>{\r\n        setToken(jwtToken)\r\n        setUserId(id)\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId: id, token: jwtToken\r\n        }))\r\n    }, [])\r\n    \r\n    const logout = useCallback(()=>{\r\n        setToken(null)\r\n        setUserId(null)\r\n        localStorage.removeItem(storageName)\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n        if(data && data.token){\r\n            login(data.token, data.userId)\r\n        }\r\n    }, [login])\r\n\r\n    return {login, logout, token, userId}\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\n// import withSuspense from './hoc/withSuspense';\r\n// import NavBarContainer from './components/NavBar/NavBar';\r\nimport { useAuth } from './hooks(Yt)/auth.hook';\r\nimport { AuthContext } from './context/AuthContext';\r\n\r\n// const DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n// const UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nconst App = (props) => {\r\n  const { token, login, logout, userId } = useAuth()\r\n  const isAuthentificated = !!token;\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      token, login, logout, userId, isAuthentificated\r\n    }}>\r\n      <div className=\"appWrapper\">\r\n        <HeaderContainer />\r\n        <Switch>\r\n          <Route exact path='/' render={() => <Redirect to='/profile' />} />\r\n          <Route path='/login' render={() => <Login />} />\r\n          <Route path='/profile' render={() => <ProfileContainer />}/>\r\n          <Route path='*' render={() => <div>404 Not found</div>} />\r\n        </Switch>\r\n      </div>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\nexport default App;","import * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\n\r\nlet rerenderEntireTree = (state) => {\r\n  ReactDOM.render(\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App store={store}/>\r\n      </Provider>\r\n    </HashRouter>, document.getElementById('root')\r\n  );\r\n}\r\n\r\nstore.subscribe(() => {\r\n  let state = store.getState();\r\n  rerenderEntireTree(state);\r\n});\r\n\r\nrerenderEntireTree(store.state);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsArea\":\"MyPosts_postsArea__3ui-L\",\"postsMenu\":\"MyPosts_postsMenu__2mhfe\",\"postsMenuHeader\":\"MyPosts_postsMenuHeader__1lNSR\",\"postsMenuSend\":\"MyPosts_postsMenuSend__3e4ur\",\"posts\":\"MyPosts_posts__foK_k\",\"postsHeader\":\"MyPosts_postsHeader__32vSr\",\"postsPost\":\"MyPosts_postsPost__1_OgN\",\"postsPostImg\":\"MyPosts_postsPostImg__ALmpG\",\"postsPostTxt\":\"MyPosts_postsPostTxt__1S_11\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsPost\":\"Post_postsPost__3GT2q\",\"postsPostImg\":\"Post_postsPostImg__1oTA6\",\"postsPostTxt\":\"Post_postsPostTxt__2Gb2f\",\"postsPostLike\":\"Post_postsPostLike__2RygP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formDiv\":\"FormsControlls_formDiv__2_XJD\",\"error\":\"FormsControlls_error__3LPrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1UTos\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionLogin\":\"Login_sectionLogin__2NZwH\",\"clickedButton\":\"Login_clickedButton__3Prea\",\"rem\":\"Login_rem__1SNPN\",\"summaryError\":\"Login_summaryError__3Nb8X\"};"],"sourceRoot":""}