{"version":3,"sources":["components/common/Selectors/users-selectors.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogMessage/DialogMessage.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/DialogMessage/DialogMessage.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["getAllUsers","state","usersPage","users","getTotalUsersCount","totalUsersCount","getPageSize","pageSize","getCurrentPage","currentPage","getIsFetching","isFetching","module","exports","DialogItem","props","path","id","className","d","dialog","dialogAva","to","name","DialogMessage","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","DialogMessagesWriting","Field","component","Input","placeholder","DialogMessagesWritingInput","DialogMessagesWritingButton","Dialogs","userId","match","params","getUser","useEffect","undefined","messagesElements","messages","dialogsElements","map","key","length","m","DialogsItems","shouldDialogBoxBeOpened","DialogMessages","DialogMessagesItems","DialogNoMessages","value","sendMessage","compose","connect","getUserId","getShouldBe","getMessages","withAuthRedirect"],"mappings":"oHAAA,0KAAO,IAAMA,EAAc,SAACC,GACxB,OAAOA,EAAMC,UAAUC,OAEdC,EAAqB,SAACH,GAC/B,OAAOA,EAAMC,UAAUG,iBAEdC,EAAc,SAACL,GACxB,OAAOA,EAAMC,UAAUK,UAEdC,EAAiB,SAACP,GAC3B,OAAOA,EAAMC,UAAUO,aAEdC,EAAgB,SAACT,GAC1B,OAAOA,EAAMC,UAAUS,a,oBCZ3BC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,eAAiB,gCAAgC,oBAAsB,qCAAqC,iBAAmB,kCAAkC,sBAAwB,uCAAuC,2BAA6B,4CAA4C,4BAA8B,+C,oBCAzaD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,UAAY,gC,oBCAlED,EAAOC,QAAU,CAAC,QAAU,iC,0JCUbC,EAPI,SAACC,GAChB,IAAIC,EAAI,mBAAeD,EAAME,IAC7B,OACI,yBAAKC,UAAWC,IAAEC,QAAQ,yBAAKF,UAAWC,IAAEE,YAAiB,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,Q,kBCEhFC,EANO,SAACT,GACnB,OACI,yBAAKG,UAAWC,IAAEM,SAAUV,EAAMU,U,0BCWpCC,EAAsBC,YAAU,CAACC,KAAM,kBAAjBD,EATL,SAACZ,GACpB,OACI,0BAAMc,SAAUd,EAAMe,aAAcZ,UAAWC,IAAEY,uBAC7C,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAOX,KAAK,UAAUY,YAAY,eAAejB,UAAWC,IAAEiB,6BAChF,4BAAQlB,UAAWC,IAAEkB,6BAArB,YAgDGC,EAzCC,SAACvB,GACb,IAAIwB,EAASxB,EAAMyB,MAAMC,OAAOF,OAC5BG,EAAU3B,EAAM2B,QACpBC,qBAAU,WAEFD,OADWE,IAAXL,EACQA,EAEA,aAEb,CAACA,EAAQG,IAEZ,IAIIG,EAJA1C,EAAQY,EAAMZ,MACd2C,EAAW/B,EAAM+B,SAEjBC,EAAkB5C,EAAM6C,KAAK,SAAA7B,GAAC,OAAI,kBAAC,EAAD,CAAY8B,IAAK9B,EAAEF,GAAIA,GAAIE,EAAEF,GAAIM,KAAMJ,EAAEI,UAI3EsB,OADYD,IAAbE,GAA0BA,EAASI,OACfJ,EAASE,KAAI,SAAAG,GAAC,OAAI,kBAAC,EAAD,CAAeF,IAAKE,EAAElC,GAAIQ,QAAS0B,EAAE1B,aAEvD,8CAOvB,OACI,yBAAKP,UAAWC,IAAEmB,SACd,yBAAKpB,UAAWC,IAAEiC,cACbL,IAE8B,IAAlChC,EAAMsC,wBAAkC,yBAAKnC,UAAWC,IAAEmC,gBACvD,yBAAKpC,UAAW4B,EAASI,OAAO/B,IAAEoC,oBAAoBpC,IAAEqC,kBACnDX,GAEL,kBAACnB,EAAD,eAAqBG,SAbb,SAAC4B,GACjB1C,EAAM2C,YAAY3C,EAAME,GAAIwC,EAAMhC,WAYwBV,KAC/C,OCtCJ4C,sBACXC,aAVoB,SAAC3D,GACrB,MAAO,CACHgB,GAAI4C,YAAU5D,GACdoD,wBAAyBS,YAAY7D,GACrCE,MAAOH,YAAYC,GACnB6C,SAAUiB,YAAY9D,MAKD,CAAEyD,gBAAahB,cACxCsB,IAFWL,CAGbrB","file":"static/js/3.d921bb0a.chunk.js","sourcesContent":["export const getAllUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__2rbDX\",\"DialogsItems\":\"Dialogs_DialogsItems__3cq6v\",\"DialogMessages\":\"Dialogs_DialogMessages__2PQXV\",\"DialogMessagesItems\":\"Dialogs_DialogMessagesItems__YtAWd\",\"DialogNoMessages\":\"Dialogs_DialogNoMessages__1s9x4\",\"DialogMessagesWriting\":\"Dialogs_DialogMessagesWriting__1Q0HX\",\"DialogMessagesWritingInput\":\"Dialogs_DialogMessagesWritingInput__2WWze\",\"DialogMessagesWritingButton\":\"Dialogs_DialogMessagesWritingButton__2DJVq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3lCvC\",\"dialogAva\":\"DialogItem_dialogAva__1Rwhb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"DialogMessage_message__1Bxpf\"};","import React from 'react';\r\nimport d from './DialogItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n    return (\r\n        <div className={d.dialog}><div className={d.dialogAva}></div><NavLink to={path}>{props.name}</NavLink></div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport d from './DialogMessage.module.css';\r\n\r\nconst DialogMessage = (props) => {\r\n    return (\r\n        <div className={d.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default DialogMessage;","import React, {useEffect} from 'react';\r\nimport d from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport DialogMessage from './DialogMessage/DialogMessage';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../common/FormsControlls/FormsControlls';\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={d.DialogMessagesWriting}>\r\n            <Field component={Input} name='message' placeholder='Send message' className={d.DialogMessagesWritingInput} />\r\n            <button className={d.DialogMessagesWritingButton}>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'AddMessageForm'})(AddMessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n    let userId = props.match.params.userId;\r\n    let getUser = props.getUser;\r\n    useEffect(() => {\r\n        if (userId !== undefined) {\r\n            getUser(userId);\r\n        } else {\r\n            getUser('Default');\r\n        }\r\n    }, [userId, getUser]);\r\n\r\n    let users = props.users;\r\n    let messages = props.messages;\r\n\r\n    let dialogsElements = users.map( d => <DialogItem key={d.id} id={d.id} name={d.name} /> );\r\n    let messagesElements;\r\n\r\n    if(messages !== undefined && messages.length){\r\n        messagesElements = messages.map(m => <DialogMessage key={m.id} message={m.message} />);\r\n    }else{\r\n        messagesElements = 'This is the beginning of your communication';\r\n    }\r\n\r\n    let addNewMessage = (value) => {\r\n        props.sendMessage(props.id, value.message);\r\n    }\r\n\r\n    return (\r\n        <div className={d.Dialogs}>\r\n            <div className={d.DialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            {props.shouldDialogBoxBeOpened !== false?<div className={d.DialogMessages}>\r\n                <div className={messages.length?d.DialogMessagesItems:d.DialogNoMessages}>\r\n                    {messagesElements}\r\n                </div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} {...props}/>\r\n            </div>:null}\r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { getMessages, getShouldBe, getUserId } from '../common/Selectors/profile-selectors';\r\nimport { getAllUsers } from '../common/Selectors/users-selectors';\r\nimport { getUser, sendMessage } from './../../redux/profile-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        id: getUserId(state),\r\n        shouldDialogBoxBeOpened: getShouldBe(state),\r\n        users: getAllUsers(state),\r\n        messages: getMessages(state),\r\n    };\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { sendMessage, getUser }),\r\n    withAuthRedirect,\r\n)(Dialogs);"],"sourceRoot":""}