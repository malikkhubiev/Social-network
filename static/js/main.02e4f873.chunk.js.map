{"version":3,"sources":["components/common/Selectors/profile-selectors.js","components/Login/Login.module.css","components/Profile/Person/Person.module.css","DATA/authDATA.js","DATA/usersDATA.js","api/api.js","hoc/withAuthRedirect.js","components/Profile/Profile.module.css","components/Header/Header.module.css","components/NavBar/NavBar.module.css","redux/profile-reducer.js","components/Profile/MyPosts/MyPosts.module.css","serviceWorker.js","redux/navbar-reducer.js","redux/auth-reducer.js","redux/redux-store.js","components/Profile/Person/PersonStatus.jsx","images/brain.jpg","components/Profile/Person/Person.jsx","utils/validators.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/Selectors/auth-selectors.js","images/logo.png","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","hoc/withSuspense.js","components/NavBar/FriendsItem/FriendsItem.jsx","components/common/Selectors/navbar-selectors.js","components/NavBar/NavBar.jsx","App.js","index.js","components/common/FormsControlls/FormsControlls.jsx","components/Profile/MyPosts/Post/Post.module.css","redux/users-reducer.js","components/common/FormsControlls/FormsControlls.module.css","components/NavBar/FriendsItem/FriendsItem.module.css"],"names":["getProfile","state","profilePage","profile","getStatus","status","getUserId","id","getShouldBe","shouldDialogBoxBeOpened","getMessages","messages","module","exports","authData","name","login","password","rememberMe","mainUser","aboutMe","lookingForAJob","isMainUser","posts","users","followed","message","likes","bcrypt","require","usersAPI","addPost","postMessage","length","changeStatus","getUser","userId","usersData","map","user","getMainUser","getUsers","follow","followedUserId","unFollow","sendMessage","sendedMessage","searchedUser","push","logIn","loginData","logInCallBack","counter","obj","compareSync","Cookies","set","register","registerData","registerCallBack","hash","hashedPassword","mapStateToProps","isAuth","auth","withAuthRedirect","Component","connect","props","to","CHANGE_USER_DATA","SET_USER_PROFILE","initialState","setUserProfile","type","changeUserData","dispatch","post","profileReducer","action","Boolean","window","location","hostname","match","friends","navbarReducer","SET_AUTH_USER_DATA","REM_AUTH_USER_DATA","setAuthUserData","data","authReducer","reducers","combineReducers","navbarPage","usersPage","usersReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","PersonStatus","useState","editMode","setEditMode","setStatus","className","person","personStatus","onDoubleClick","onChange","e","text","target","value","autoFocus","onBlur","Person","personTopimg","personData","src","ava","alt","personDataAva","personDataDesc","personDataDescName","personDataDescDesc","required","Post","p","postsPost","postsPostImg","postsPostTxt","postsPostLike","maxLength","maxLengthCreator","AddNewPostFormRedux","reduxForm","onSubmit","handleSubmit","Field","validate","component","Input","placeholder","postsMenuSend","MyPosts","postsElements","reverse","key","postsArea","postsMenu","postsMenuHeader","postText","postsHeader","MyPostsContainer","Profile","Fragment","withRouter","params","useEffect","undefined","mainContent","getIsAuth","getUserName","Header","h","header","logo","onClick","LogoutSanka","LoginReduxForm","authMode","CheckBox","style","summaryError","error","LoginContainer","LoginSanka","formData","a","prom","userName","result","stopSubmit","_error","alert","setAuthMode","changeAuthMode","res","sectionLogin","withSuspense","Suspense","fallback","FriendsItem","f","friendsItem","friendsItemImg","friendsItemName","getFriends","NavBarContainer","friendsElements","n","nav","list","activeClassName","newCl","friendsHeader","friendsItems","DialogsContainer","React","lazy","UsersContainer","App","exact","path","render","rerenderEntireTree","ReactDOM","basename","process","document","getElementById","subscribe","getState","navigator","serviceWorker","ready","then","registration","unregister","catch","console","input","meta","hasError","touched","styles","formDiv","SET_USERS","SET_TOTAL_USERS_COUNT","SET_CURRENT_PAGE","TOGGLE_IS_FETCHING","totalUsersCount","pageSize","currentPage","isFetching","setUsers","toggleIsFetching","totalCount","setPage","pageNumber","setCurrentPage"],"mappings":"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","file":"static/js/main.02e4f873.chunk.js","sourcesContent":["export const getProfile = (state) => {\r\n    return state.profilePage.profile;\r\n}\r\n\r\nexport const getStatus = (state) => {\r\n    return state.profilePage.profile.status;\r\n}\r\n\r\nexport const getUserId = (state) => {\r\n    return state.profilePage.profile.id;\r\n}\r\n\r\nexport const getShouldBe = (state) => {\r\n    return state.profilePage.profile.shouldDialogBoxBeOpened;\r\n}\r\n\r\nexport const getMessages = (state) => {\r\n    return state.profilePage.profile.messages;\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionLogin\":\"Login_sectionLogin__nBggZ\",\"clickedButton\":\"Login_clickedButton__3i5qL\",\"rem\":\"Login_rem__2xU7U\",\"summaryError\":\"Login_summaryError__21zlR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"person\":\"Person_person__M1UjD\",\"personTopimg\":\"Person_personTopimg__129P-\",\"personData\":\"Person_personData__3NiN1\",\"personDataAva\":\"Person_personDataAva__13yvz\",\"personDataDesc\":\"Person_personDataDesc__27Qna\",\"personDataDescName\":\"Person_personDataDescName__6UAx5\",\"personStatus\":\"Person_personStatus__q5nCJ\",\"personDataDescDesc\":\"Person_personDataDescDesc__2kOte\"};","let authData = [\r\n    {\r\n        name: \"Malik Khubiev\",\r\n        login: 'admin',\r\n        password: 'admin',\r\n        rememberMe: false,\r\n    },\r\n];\r\n\r\nexport default authData;","export const mainUser = {\r\n    id: 'mainUser',\r\n    name: \"Malik\",\r\n    aboutMe: 'Я Front-end разработчик',\r\n    status: \"Double click me!\",\r\n    lookingForAJob: true,\r\n    isMainUser: true,\r\n    posts: [],\r\n    shouldDialogBoxBeOpened: false,\r\n}\r\nconst users = [\r\n    {\r\n        id: 0,\r\n        name: \"Alex\",\r\n        aboutMe: 'Давайте жить дружно',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: true,\r\n        followed: false,\r\n        posts: [\r\n            { id: 0, message: \"Hi!\", likes: 5 },\r\n            { id: 1, message: \"Life is so beautiful\", likes: 12 },\r\n        ],\r\n        messages: [\r\n            { id: 0, message: \"Hi!\"},\r\n            { id: 1, message: \"How are you?\"},\r\n        ],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 1,\r\n        name: 'Billy',\r\n        aboutMe: 'Доброта спасёт мир!!!',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: true,\r\n        followed: false,\r\n        posts: [\r\n            { id: 0, message: \"DH is one of the best serials\", likes: 25 },\r\n            { id: 1, message: \"New song...That's good!\", likes: 122 },\r\n        ],\r\n        messages: [\r\n            { id: 0, message: \"Have a great day!\"},\r\n        ],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Cameron',\r\n        aboutMe: 'У меня вышел новый альбом!!!',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: true,\r\n        followed: false,\r\n        posts: [\r\n            { id: 0, message: \"Have a great day!!!\", likes: 15 },\r\n        ],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Adrianne',\r\n        aboutMe: 'Каждый день прыгю с парашютом, присоединяйтесь',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: true,\r\n        followed: false,\r\n        posts: [\r\n            { id: 0, message: \"American atmosphere\", likes: 213 },\r\n            { id: 1, message: \"Don't drink coffee\", likes: -5 },\r\n            { id: 2, message: \"Last post wasn't mine\", likes: 5 },\r\n        ],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Robert',\r\n        aboutMe: 'Снял 3 фильма, из них 4 получили оскара :)',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: false,\r\n        followed: true,\r\n        posts: [],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Alan',\r\n        aboutMe: 'Физкульт привет, кому составить план тренировок - пишите в личку',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: true,\r\n        followed: false,\r\n        posts: [],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Hugh',\r\n        aboutMe: 'Бесконечность не предел !!!',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: false,\r\n        followed: true,\r\n        posts: [],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 7,\r\n        name: 'Amanda',\r\n        aboutMe: 'Люблю рисовать, сегодня отличная погода для пейзажа',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: false,\r\n        followed: false,\r\n        posts: [],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 8,\r\n        name: 'Justin',\r\n        aboutMe: 'Умение перелезать через заборы - показатель интеллекта',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: false,\r\n        followed: true,\r\n        posts: [],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 9,\r\n        name: 'Peter',\r\n        aboutMe: 'С наступающим моим днём рождения ;)',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: true,\r\n        followed: true,\r\n        posts: [],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 10,\r\n        name: 'Max',\r\n        aboutMe: 'Области тьмы один из лучших сериалов, всем советую!!!',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: true,\r\n        followed: true,\r\n        posts: [],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n    {\r\n        id: 11,\r\n        name: 'John',\r\n        aboutMe: 'Так сладок мед, что, наконец, он горек. Избыток вкуса убивает вкус.',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: true,\r\n        followed: false,\r\n        posts: [],\r\n        messages:[],\r\n        isMainUser: false,\r\n    },\r\n];\r\n\r\nexport default users;","import authData from '../DATA/authDATA';\r\nimport usersData from '../DATA/usersDATA';\r\nimport { mainUser } from '../DATA/usersDATA';\r\nimport Cookies from 'js-cookie';\r\nconst bcrypt = require('bcryptjs');\r\n\r\nexport const usersAPI = {\r\n    addPost(postMessage) {\r\n        let message = postMessage;\r\n        let id = mainUser.posts.length;\r\n        mainUser.posts = [...mainUser.posts, { id, message, likes: 100 }];\r\n        return mainUser;\r\n    },\r\n    changeStatus(status) {\r\n        mainUser.status = status;\r\n        return mainUser;\r\n    },\r\n    getUser(userId) {\r\n        let profile;\r\n        usersData.map(user => {\r\n            if (user.id === +userId) profile = user;\r\n        });\r\n        return profile;\r\n    },\r\n    getMainUser() {\r\n        return mainUser;\r\n    },\r\n    getUsers() {\r\n        return usersData;\r\n    },\r\n    follow(followedUserId) {\r\n        usersData.map(user => user.id === followedUserId ? user.followed = true : 0);\r\n        return usersData;\r\n    },\r\n    unFollow(followedUserId) {\r\n        usersData.map(user => user.id === followedUserId ? user.followed = false : 0);\r\n        return usersData;\r\n    },\r\n    sendMessage(id, sendedMessage) {\r\n        let searchedUser;\r\n        usersData.map(user => {\r\n            if (user.id === id) {\r\n                user.messages.push({ id: user.messages.length, message: sendedMessage });\r\n                searchedUser = user;\r\n            }\r\n        });\r\n        return searchedUser;\r\n    },\r\n    async logIn(loginData, logInCallBack) {\r\n        let counter = 0;\r\n        authData.map(obj => {\r\n            if (obj.login === loginData.login && bcrypt.compareSync(loginData.password, obj.password)) {\r\n                logInCallBack(true, obj.login);\r\n                if(loginData.rememberMe === true){\r\n                    Cookies.set('authorized', true);\r\n                    Cookies.set('login', obj.login);\r\n                    Cookies.set('password', obj.password);\r\n                }\r\n            } else {\r\n                counter++;\r\n            }\r\n        });\r\n        if (counter === authData.length) {\r\n            logInCallBack('Wrong Email or Password');\r\n        }\r\n    },\r\n    async register(registerData, registerCallBack) {\r\n        let counter = 0;\r\n        authData.map(obj => {\r\n            if (obj.login === registerData.login) {\r\n                registerCallBack('A user with the same login already exists');\r\n            } else {\r\n                counter++;\r\n            }\r\n        });\r\n        if (counter === authData.length) {\r\n            let hashedPassword = await bcrypt.hash(registerData.password, 1);\r\n            authData.push({\r\n                login: registerData.login,\r\n                password: hashedPassword,\r\n            });\r\n            registerCallBack(true);  \r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to='/login' />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContent\":\"Profile_mainContent___EDmi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__yX_dT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__3OPxm\",\"list\":\"NavBar_list__3uVt0\",\"friends\":\"NavBar_friends__2nmgC\",\"friendsHeader\":\"NavBar_friendsHeader__3f5U2\",\"friendsItems\":\"NavBar_friendsItems__YKKxF\"};","import { usersAPI } from '../api/api';\r\n\r\nconst CHANGE_USER_DATA = 'CHANGE_USER_DATA';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\n\r\nlet initialState = {\r\n    profile: {\r\n        id: 0,\r\n        name: \"Malik\",\r\n        aboutMe: 'Я Front-end разработчик',\r\n        status: \"Double click me!\",\r\n        lookingForAJob: true,\r\n        isMainUser: true,\r\n        posts: [],\r\n        messages: [],\r\n        shouldDialogBoxBeOpened: false,\r\n    },\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_PROFILE: {\r\n            return{\r\n                ...state,\r\n                profile: action.profile,\r\n                posts: action.profile.posts,\r\n            }\r\n        }\r\n        case CHANGE_USER_DATA: {\r\n            return{\r\n                ...state,\r\n                profile: action.user\r\n            }\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return{\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    }\r\n}\r\n\r\nexport const changeUserData = (user) => {\r\n    return{\r\n        type: CHANGE_USER_DATA,\r\n        user\r\n    }\r\n}\r\n\r\nexport const sendMessage = (id, message) => (dispatch) => {\r\n    let user = usersAPI.sendMessage(id, message);\r\n    dispatch(changeUserData(user));   \r\n}\r\n\r\nexport const changeStatus = (status) => (dispatch) => {\r\n    let user = usersAPI.changeStatus(status);\r\n    dispatch(changeUserData(user));   \r\n}\r\n\r\nexport const addPost = (post) => (dispatch) => {\r\n    let user = usersAPI.addPost(post);\r\n    dispatch(changeUserData(user));\r\n}\r\n\r\nexport const getUser = (userId) => (dispatch) => {\r\n    if(userId === 'Default'){\r\n        let user = usersAPI.getMainUser();\r\n        dispatch(setUserProfile(user));\r\n    }else{\r\n        let user = usersAPI.getUser(userId);\r\n        dispatch(setUserProfile(user));    \r\n    }\r\n}\r\n\r\nexport default profileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsArea\":\"MyPosts_postsArea__3XGX1\",\"postsMenu\":\"MyPosts_postsMenu__XUFk-\",\"postsMenuHeader\":\"MyPosts_postsMenuHeader__2-vPB\",\"postsMenuSend\":\"MyPosts_postsMenuSend__1jP7m\",\"posts\":\"MyPosts_posts__1Gc6j\",\"postsHeader\":\"MyPosts_postsHeader__1-dzJ\",\"postsPost\":\"MyPosts_postsPost__1GpZs\",\"postsPostImg\":\"MyPosts_postsPostImg__iacqn\",\"postsPostTxt\":\"MyPosts_postsPostTxt__3ULKe\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","let initialState = {\r\n    friends: [\r\n        { id: 1, name: \"Andrey\" },\r\n        { id: 2, name: \"Zabit\" },\r\n        { id: 3, name: \"Khabib\" }\r\n    ]\r\n}\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\nexport default navbarReducer;","import { stopSubmit } from 'redux-form';\r\nimport { usersAPI } from './../api/api';\r\n\r\nconst SET_AUTH_USER_DATA = 'SET-AUTH-USER-DATA';\r\nconst REM_AUTH_USER_DATA = 'REM-AUTH-USER-DATA';\r\n\r\nlet initialState = {\r\n    name: null,\r\n    login: null,\r\n    password: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true,\r\n            }\r\n        };\r\n        case REM_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n            }\r\n        };\r\n        default: {\r\n            return state;\r\n        };\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (login, password, name) => {\r\n    return ({\r\n        type: SET_AUTH_USER_DATA,\r\n        data: { login, password, name } \r\n    })\r\n};\r\nexport const remAuthUserData = () => {\r\n    return ({\r\n        type: REM_AUTH_USER_DATA\r\n    })\r\n};\r\n\r\nexport const LoginSanka = (formData, authMode) => async (dispatch) => {\r\n    if(authMode === 'login'){\r\n        let result; let name;\r\n        function logInCallBack(prom, userName) {\r\n            result = prom;\r\n            name = userName;\r\n        }\r\n        await usersAPI.logIn(formData, logInCallBack);\r\n        if (result === true) {\r\n            dispatch(setAuthUserData(formData.login, formData.password, name));\r\n        } else {\r\n            dispatch(stopSubmit('login', { _error: result }));\r\n        }\r\n    }else{\r\n        let result;\r\n        function registerCallBack(prom){\r\n            result = prom;\r\n        }\r\n        await usersAPI.register(formData, registerCallBack);\r\n        if(result === true){\r\n            alert('Вы успешно зарегистрированы')\r\n        }else{\r\n            dispatch(stopSubmit('login', { _error: result }))\r\n        }\r\n    }\r\n}\r\n\r\nexport const LogoutSanka = () => (dispatch) => {\r\n    dispatch(remAuthUserData());\r\n}\r\n\r\nexport default authReducer;","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport navbarReducer from './navbar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    navbarPage: navbarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React, { useState } from 'react';\r\nimport person from './Person.module.css';\r\nconst PersonStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    let changeStatus = (e) => {\r\n        let text = e.target.value;\r\n        setStatus(text);\r\n    }\r\n    let activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    let deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.changeStatus(status);\r\n    }\r\n    return (\r\n        <div className={person.personStatus}>\r\n            {editMode === false?\r\n            <div>\r\n                <p onDoubleClick={activateEditMode}>{status}</p>\r\n            </div>\r\n            :\r\n            <div>\r\n                <input onChange={e=>changeStatus(e)} autoFocus={true} onBlur={deActivateEditMode} value={status} />\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\nexport default PersonStatus;","export default __webpack_public_path__ + \"static/media/brain.87fe3c8f.jpg\";","import React from 'react';\r\nimport person from './Person.module.css';\r\nimport PersonStatus from './PersonStatus';\r\nimport ava from './../../../images/brain.jpg';\r\nconst Person = (props) => {\r\n    return (\r\n        <div className={person.person}>\r\n            <div className={person.personTopimg}></div>\r\n            <div className={person.personData}>\r\n                <img src={ava} alt={'avatar'} className={person.personDataAva}/>\r\n                <div className={person.personDataDesc}>\r\n                    <p className={person.personDataDescName}>{props.profile.name}</p>\r\n                    {props.profile.isMainUser?<PersonStatus {...props}/>:<p className={person.personDataDescDesc}>{props.profile.status}</p>}\r\n                    <div className={person.personDataDescDesc}><b>Обо мне:</b> {props.profile.aboutMe}</div>\r\n                    <div className={person.personDataDescDesc}><b>Сведения о работе:</b>{props.profile.lookingForAJob ? <p className={person.personDataDescDesc}>В поиске работы</p> : <p className={person.personDataDescDesc}>У меня отличная работа</p>}</div>\r\n                    <div className={person.personDataDescDesc}><b>Образование:</b> RSEU Rinh</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Person;","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","import React from 'react';\r\nimport p from './Post.module.css';\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={p.postsPost}>\r\n            <div className={p.postsPostImg}></div>\r\n            <p className={p.postsPostTxt}>{props.message}</p>\r\n            <p className={p.postsPostLike}>like: {props.likes}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators';\r\nimport { Input } from '../../common/FormsControlls/FormsControlls';\r\nimport p from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst maxLength = maxLengthCreator(30);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field validate={[required, maxLength]} name='postText' component={Input} placeholder='your news...' />\r\n            <button className={p.postsMenuSend}>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'AddNewPostForm'})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n    let posts = [...props.posts];\r\n    let postsElements = posts.reverse().map(p => <Post key={p.id} likes={p.likes} message={p.message} />);\r\n    let addPost = (value) => {\r\n        props.addPost(value.postText);\r\n    }\r\n    return (\r\n        <div className={p.postsArea}>\r\n            {props.isMainUser?<div className={p.postsMenu}>\r\n                <p className={p.postsMenuHeader}>My posts</p>\r\n                <AddNewPostFormRedux onSubmit={addPost}/>\r\n            </div>:null}\r\n            <div className={p.posts}>\r\n                {postsElements.length?postsElements:<p className={p.postsHeader}>This user has not posted anything</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPost } from './../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isMainUser: state.profilePage.profile.isMainUser,\r\n        posts: state.profilePage.profile.posts,\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport Person from './Person/Person';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nconst Profile = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Person {...props} profile={props.profile} />\r\n            <MyPostsContainer />\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Profile;","import React, { useEffect } from 'react';\r\nimport p from './Profile.module.css';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUser, changeStatus } from './../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getProfile, getStatus } from '../common/Selectors/profile-selectors';\r\n\r\nconst ProfileContainer = (props) => {\r\n    let userId = props.match.params.userId;\r\n    let getUser = props.getUser;\r\n    useEffect(() => {\r\n        if (userId !== undefined) {\r\n            getUser(userId);\r\n        }else{\r\n            getUser('Default');\r\n        }\r\n    }, [userId, getUser]);\r\n    return (\r\n        <div className={p.mainContent}>\r\n            <Profile {...props} />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: getProfile(state),\r\n    status: getStatus(state),\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUser, changeStatus }),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer);","export const getIsAuth = (state) => {\r\n    return state.auth.isAuth;\r\n}\r\n\r\nexport const getUserName = (state) => {\r\n    return state.auth.name;\r\n}","export default __webpack_public_path__ + \"static/media/logo.3597d19d.png\";","import React from 'react';\r\nimport h from './Header.module.css';\r\nimport logo from './../../images/logo.png';\r\nimport { NavLink } from 'react-router-dom';\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={h.header}>\r\n            <img src={logo} alt={'logo'} />\r\n            {props.isAuth ? <div><p>{props.name}</p><button onClick={props.LogoutSanka}>Log out</button></div> : <NavLink to='/login'><p>Log in</p></NavLink>} \r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { LogoutSanka } from '../../redux/auth-reducer';\r\nimport { getUsers } from '../../redux/users-reducer';\r\nimport { getIsAuth, getUserName } from '../common/Selectors/auth-selectors';\r\nimport Header from './Header';\r\n\r\nconst HeaderContainer = (props) => {\r\n    let getUsers = props.getUsers;\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, [getUsers]);\r\n\r\n    return (\r\n        <Header {...props} />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: getIsAuth(state),\r\n    name: getUserName(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUsers, LogoutSanka })(HeaderContainer);","import React, { useState } from 'react';\r\nimport style from './Login.module.css';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport { CheckBox, Input } from '../common/FormsControlls/FormsControlls';\r\nimport { required } from '../../utils/validators';\r\nimport { LoginSanka } from '../../redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getIsAuth } from '../common/Selectors/auth-selectors';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder='Login' name={'login'} validate={[required]} component={Input} />\r\n            </div>\r\n            <div>\r\n                <Field placeholder='Password' name={'password'} validate={[required]} component={Input} />\r\n            </div>\r\n\r\n            {props.authMode === 'login'?\r\n            <div>\r\n                <Field placeholder='' name={'rememberMe'} validate={[]} component={CheckBox} />\r\n            </div>:''}\r\n            \r\n            <div>\r\n                <button>Enter</button>\r\n            </div>\r\n            <div className={style.summaryError}>\r\n                {props.error?<p>{props.error}</p>:''}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm); \r\n\r\nconst Login = (props) => {\r\n\r\n    let [authMode, setAuthMode] = useState('login'); \r\n    let changeAuthMode = res => setAuthMode(res);\r\n\r\n    let mySubmit = (formData) => {\r\n        props.LoginSanka(formData, authMode);\r\n    }\r\n\r\n    // Auto Autent\r\n    // if(Cookies.get('authorized') === 'true'){\r\n    //     let login = Cookies.get('login');\r\n    //     let password = Cookies.get('password');\r\n    //     let rememberMe = true;\r\n    //     mySubmit({login, password, rememberMe});\r\n    // }\r\n\r\n    if(props.isAuth){\r\n        return <Redirect to='/profile' />\r\n    }\r\n\r\n    return (\r\n        <div className={style.sectionLogin}>\r\n            <p>{authMode}</p>\r\n            <div><button onClick={()=>changeAuthMode('login')}>Log in</button> / <button onClick={()=>changeAuthMode('register')}>Register now</button></div>\r\n            <LoginReduxForm authMode={authMode} onSubmit={mySubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: getIsAuth(state),\r\n})\r\n\r\nconst LoginContainer = connect(mapStateToProps, {LoginSanka})(Login);\r\n\r\nexport default LoginContainer;","import React from 'react';\r\n\r\nconst withSuspense = (Component) => {\r\n    return (props) => (\r\n        <React.Suspense fallback={<div>...Loading</div>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    )\r\n}\r\n\r\nexport default withSuspense;","import React from 'react';\r\nimport f from './FriendsItem.module.css';\r\nconst FriendsItem = (props) => {\r\n    return (\r\n        <div className={f.friendsItem}>\r\n            <div className={f.friendsItemImg}></div>\r\n            <p className={f.friendsItemName}>{props.name}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default FriendsItem;","export const getFriends = (state) => {\r\n    return state.navbarPage.friends;\r\n}","import React from 'react';\r\nimport n from './NavBar.module.css';\r\nimport FriendsItem from './FriendsItem/FriendsItem';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getFriends } from '../common/Selectors/navbar-selectors';\r\n\r\nconst NavBar = (props) => {\r\n    let friends = props.friends;\r\n    let friendsElements = friends.map(f=><FriendsItem key={f.id} name={f.name} />);\r\n    return (\r\n        <nav className={n.nav}>\r\n            <ul className={n.list}>\r\n                <NavLink activeClassName={n.newCl} to=\"/profile\"><li>Profile</li></NavLink>\r\n                <NavLink activeClassName={n.newCl} to=\"/dialogs\"><li>Dialogs</li></NavLink>\r\n                <NavLink activeClassName={n.newCl} to=\"/users\"><li>Users</li></NavLink>\r\n            </ul>\r\n            <div className={n.friends}>\r\n                <p className={n.friendsHeader}>Friends</p>\r\n                <div className={n.friendsItems}>\r\n                    {friendsElements}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    friends: getFriends(state),\r\n})\r\n\r\nconst NavBarContainer = connect(mapStateToProps, {})(NavBar);\r\n\r\nexport default NavBarContainer;","import React from 'react';\r\nimport './App.css';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport withSuspense from './hoc/withSuspense';\r\nimport NavBarContainer from './components/NavBar/NavBar';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <div className=\"appWrapper\">\r\n      <HeaderContainer />\r\n      <div className=\"double\">\r\n        <NavBarContainer />\r\n        <Switch>\r\n          <Route exact path='/' render={() => <Redirect to='/profile' />} />\r\n          <Route path='/login' render={() => <Login />} />\r\n          <Route path='/profile/:userId?' render={() => <div className='rightSide'><ProfileContainer /></div>} />\r\n          <Route path='/dialogs/:userId?' render={withSuspense(DialogsContainer)} />\r\n          <Route path='/users' render={withSuspense(UsersContainer)} />\r\n          <Route path='*' render={() => <div className='rightSide'>404 Not found</div>} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;","import * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\n\r\nlet rerenderEntireTree = (state) => {\r\n  ReactDOM.render(\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n      <Provider store={store}>\r\n        <App store={store}/>\r\n      </Provider>\r\n    </HashRouter>, document.getElementById('root')\r\n  );\r\n}\r\n\r\nstore.subscribe(() => {\r\n  let state = store.getState();\r\n  rerenderEntireTree(state);\r\n});\r\n\r\nrerenderEntireTree(store.state);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport styles from './FormsControlls.module.css';\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={hasError ? styles.error : styles.formDiv}>\r\n            <input {...input} {...props} />\r\n            {hasError ? <span>{meta.error}</span> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const CheckBox = ({input, meta, ...props}) => (\r\n    <div className={styles.formDiv}>\r\n        remember me?\r\n        <input {...input} {...props} type=\"checkbox\" />\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsPost\":\"Post_postsPost__3lnYM\",\"postsPostImg\":\"Post_postsPostImg__8hC4f\",\"postsPostTxt\":\"Post_postsPostTxt__2Ero-\",\"postsPostLike\":\"Post_postsPostLike__1QF6N\"};","import { usersAPI } from './../api/api';\r\n\r\nlet SET_USERS = 'SET-USERS';\r\nlet SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nlet SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nlet TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n        };\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount,\r\n            }\r\n        };\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber,\r\n            }\r\n        };\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        };\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const setUsers = (users) => { return { type: SET_USERS, users } };\r\nexport const setCurrentPage = (pageNumber) => { return { type: SET_CURRENT_PAGE, pageNumber } };\r\nexport const setTotalUsersCount = (totalCount) => { return { type: SET_TOTAL_USERS_COUNT, totalCount } };\r\nexport const toggleIsFetching = (isFetching) => { return { type: TOGGLE_IS_FETCHING, isFetching } };\r\n\r\nexport const getUsers = () => (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let users = usersAPI.getUsers();\r\n    dispatch(setUsers(users));\r\n    dispatch(setTotalUsersCount(users.length));\r\n    dispatch(toggleIsFetching(false));\r\n}\r\n\r\nexport const follow = (id) => (dispatch) => {\r\n    let users = usersAPI.follow(id);\r\n    dispatch(setUsers(users));\r\n}\r\n\r\nexport const unFollow = (id) => (dispatch) => {\r\n    let users = usersAPI.unFollow(id);\r\n    dispatch(setUsers(users));\r\n}\r\n\r\nexport const setPage = (pageNumber) => (dispatch) => {\r\n    dispatch(setCurrentPage(pageNumber));\r\n}\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formDiv\":\"FormsControlls_formDiv__CgeQS\",\"error\":\"FormsControlls_error__1ZL9-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsItem\":\"FriendsItem_friendsItem__1MXod\",\"friendsItemImg\":\"FriendsItem_friendsItemImg__3U6sD\",\"friendsItemName\":\"FriendsItem_friendsItemName__tmkWz\"};"],"sourceRoot":""}