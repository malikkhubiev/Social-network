{"version":3,"sources":["redux/dialogs-reducer.js","hoc/withAuthRedirect.js","components/Profile/Profile.module.css","components/Header/Header.module.css","components/Profile/Person/Person.module.css","components/NavBar/NavBar.module.css","serviceWorker.js","redux/profile-reducer.js","redux/navbar-reducer.js","redux/auth-reducer.js","redux/redux-store.js","components/NavBar/FriendsItem/FriendsItem.jsx","components/NavBar/NavBar.jsx","images/brain.jpg","components/Profile/Person/PersonStatus.jsx","components/Profile/Person/Person.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","images/logo.png","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","hoc/withSuspense.js","App.js","index.js","utils/validators.js","redux/authDATA.js","api/api.js","components/Profile/MyPosts/MyPosts.module.css","components/common/FormsControlls/FormsControlls.jsx","components/Profile/MyPosts/Post/Post.module.css","redux/users-reducer.js","components/NavBar/FriendsItem/FriendsItem.module.css","components/Login/Login.module.css","components/common/FormsControlls/FormsControlls.module.css"],"names":["SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessage","newMessage","type","dialogsReducer","state","action","length","mapStateToProps","isAuth","auth","withAuthRedirect","Component","connect","props","to","module","exports","Boolean","window","location","hostname","match","ADD_POST","SET_USER_PROFILE","SET_STATUS","profile","status","aboutMe","fullName","lookingForAJob","photos","small","large","userId","posts","likes","profileReducer","post","friends","navbarReducer","SET_AUTH_USER_DATA","REM_AUTH_USER_DATA","login","password","authReducer","data","reducers","combineReducers","profilePage","dialogsPage","navbarPage","usersPage","usersReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","FriendsItem","className","f","friendsItem","friendsItemImg","friendsItemName","NavBar","friendsElements","map","n","nav","list","activeClassName","newCl","friendsHeader","friendsItems","PersonStatus","useState","editMode","setEditMode","setStatus","person","personStatus","onDoubleClick","onChange","e","text","target","value","changeStatus","autoFocus","onBlur","Person","photo","ava","personTopimg","personData","src","personDataAva","personDataDesc","personDataDescName","personDataDescDesc","Post","p","postsPost","postsPostImg","postsPostTxt","postsPostLike","maxLength","maxLengthCreator","AddNewPostFormRedux","reduxForm","onSubmit","handleSubmit","Field","validate","required","component","Input","placeholder","postsMenuSend","MyPosts","postsElements","reverse","postsArea","postsMenu","postsMenuHeader","addPost","postText","MyPostsContainer","dispatch","Profile","Fragment","getUsers","a","usersAPI","getUser","withRouter","useEffect","params","undefined","mainContent","Header","h","header","logo","onClick","LogoutSanka","LoginReduxForm","style","rem","summaryError","error","LoginContainer","LoginSanka","formData","result","logIn","prom","userName","setAuthUserData","stopSubmit","_error","sectionLogin","withSuspense","Suspense","fallback","DialogsContainer","React","lazy","UsersContainer","App","getState","path","render","rerenderEntireTree","ReactDOM","basename","process","document","getElementById","subscribe","navigator","serviceWorker","ready","then","registration","unregister","catch","console","authData","rememberMe","currentPage","pageSize","axios","withCredentials","response","loginData","callBack","counter","obj","input","meta","hasError","touched","styles","formDiv","SET_USERS","SET_TOTAL_USERS_COUNT","SET_CURRENT_PAGE","TOGGLE_IS_FETCHING","users","totalUsersCount","isFetching","follow","unFollow","setCurrentPage","pageNumber","toggleIsFetching","items","totalCount"],"mappings":"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","file":"static/js/main.c3b862f2.chunk.js","sourcesContent":["const SEND_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Artem' },\r\n        { id: 2, name: 'Zabit' },\r\n        { id: 3, name: 'Messi' },\r\n        { id: 4, name: 'Siera' },\r\n        { id: 5, name: 'Zhois' },\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hi!' },\r\n        { id: 2, message: 'Good architecture :)' },\r\n        { id: 3, message: 'Have a good day)' },\r\n        { id: 4, message: '#WhatMeansHashTag?' },\r\n        { id: 5, message: 'New Website!!!' },\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:{\r\n            let message = action.newMessage;\r\n            let id = state.messages.length+1;\r\n            return{\r\n                ...state,\r\n                messages: [...state.messages, {id, message}]\r\n            }\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexport const sendMessage = (newMessage) => {\r\n    return({\r\n        type: SEND_MESSAGE,\r\n        newMessage\r\n    });\r\n}\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to='/login' />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContent\":\"Profile_mainContent__F8CjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__fEKkO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"person\":\"Person_person__1yJZw\",\"personTopimg\":\"Person_personTopimg__3oi_T\",\"personData\":\"Person_personData__2iTBv\",\"personDataAva\":\"Person_personDataAva__20fKt\",\"personDataDescName\":\"Person_personDataDescName__2x5K-\",\"personStatus\":\"Person_personStatus__1zEh5\",\"personDataDescDesc\":\"Person_personDataDescDesc__WEane\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__bQR7m\",\"list\":\"NavBar_list__2DAXM\",\"friends\":\"NavBar_friends__2zqJ9\",\"friendsHeader\":\"NavBar_friendsHeader__3DPFc\",\"friendsItems\":\"NavBar_friendsItems__3XaP6\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { act } from \"react-dom/test-utils\";\r\nimport { usersAPI } from './../api/api';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_STATUS = 'SET-STATUS'; \r\n\r\nlet initialState = {\r\n    profile: {\r\n        status: \"Double click me!\",\r\n        aboutMe: 'Я Front-end разработчик',\r\n        fullName: \"Malik\",\r\n        lookingForAJob: true,\r\n        photos: {small: null, large: null},\r\n        userId: 99999\r\n    },\r\n    posts: [\r\n        { id: 1, message: \"Hi!\", likes: 5 },\r\n        { id: 2, message: \"Hey, i'm fine, how are you?\", likes: 7 },\r\n        { id: 3, message: \"I'm fine too, nice to meet you\", likes: 2 },\r\n        { id: 4, message: \";)\", likes: 500 },\r\n        { id: 5, message: \"React is so much interesting!\", likes: 52 },\r\n    ],\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let message = action.post;\r\n            let id = state.posts.length+1;\r\n            return{\r\n                ...state,\r\n                posts: [...state.posts, {id, message, likes: 100}]\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return{\r\n                ...state,\r\n                profile: action.profile,\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return{\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    status: action.status, \r\n                } \r\n            }\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexport const addPostActionCreator = (post) => {\r\n    return ({\r\n        type: ADD_POST,\r\n        post,\r\n    })\r\n}\r\nexport const setUserProfile = (profile) => {\r\n    return({\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    })\r\n}\r\nexport const setStatus = (status) => {\r\n    return({\r\n        type: SET_STATUS, status\r\n    })\r\n}\r\nexport const getUsers = (userId) => async (dispatch) => {\r\n    let data = await usersAPI.getUser(userId);\r\n    dispatch(setUserProfile(data));\r\n}\r\n\r\nexport default profileReducer;","let initialState = {\r\n    friends: [\r\n        { id: 1, name: \"Andrey\" },\r\n        { id: 2, name: \"Zabit\" },\r\n        { id: 3, name: \"Khabib\" }\r\n    ]\r\n}\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\nexport default navbarReducer;","import { stopSubmit } from 'redux-form';\r\nimport { usersAPI } from './../api/api';\r\n\r\nconst SET_AUTH_USER_DATA = 'SET-AUTH-USER-DATA';\r\nconst REM_AUTH_USER_DATA = 'REM-AUTH-USER-DATA';\r\n\r\nlet initialState = {\r\n    name: null,\r\n    login: null,\r\n    password: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true,\r\n            }\r\n        };\r\n        case REM_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n            }\r\n        };\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (login, password, name) => {\r\n    return ({ \r\n        type: SET_AUTH_USER_DATA,\r\n        data: { login, password, name } \r\n    })\r\n};\r\nexport const remAuthUserData = () => {\r\n    return ({\r\n        type: REM_AUTH_USER_DATA\r\n    })\r\n};\r\n\r\nexport const LoginSanka = (formData) => dispatch => {\r\n    let result;\r\n    let name;\r\n    function callBack(prom, userName) {\r\n        result = prom;\r\n        name = userName;\r\n    }\r\n    usersAPI.logIn(formData, callBack);\r\n    if (result === true) {\r\n        dispatch(setAuthUserData(formData.login, formData.password, name));\r\n    } else {\r\n        dispatch(stopSubmit('login', { _error: result }));\r\n    }\r\n}\r\n\r\nexport const LogoutSanka = () => (dispatch) => {\r\n    dispatch(remAuthUserData());\r\n}\r\n\r\nexport default authReducer;","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport navbarReducer from './navbar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    navbarPage: navbarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport f from './FriendsItem.module.css';\r\nconst FriendsItem = (props) => {\r\n    return (\r\n        <div className={f.friendsItem}>\r\n            <div className={f.friendsItemImg}></div>\r\n            <p className={f.friendsItemName}>{props.name}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default FriendsItem;","import React from 'react';\r\nimport n from './NavBar.module.css';\r\nimport FriendsItem from './FriendsItem/FriendsItem';\r\nimport { NavLink } from 'react-router-dom';\r\nconst NavBar = (props) => {\r\n    let friends = props.friends;\r\n    let friendsElements = friends.map(f=><FriendsItem name={f.name} />);\r\n    return (\r\n        <nav className={n.nav}>\r\n            <ul className={n.list}>\r\n                <NavLink activeClassName={n.newCl} to=\"/profile\"><li>Profile</li></NavLink>\r\n                <NavLink activeClassName={n.newCl} to=\"/dialogs\"><li>Dialogs</li></NavLink>\r\n                <NavLink activeClassName={n.newCl} to=\"/users\"><li>Users</li></NavLink>\r\n            </ul>\r\n            <div className={n.friends}>\r\n                <p className={n.friendsHeader}>Friends</p>\r\n                <div className={n.friendsItems}>\r\n                    {friendsElements}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default NavBar;","export default __webpack_public_path__ + \"static/media/brain.87fe3c8f.jpg\";","import React, { useState } from 'react';\r\nimport person from './Person.module.css';\r\nconst PersonStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    let changeStatus = (e) => {\r\n        let text = e.target.value;\r\n        setStatus(text);\r\n    }\r\n    let activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    let deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.setStatus(status);\r\n    }\r\n    return (\r\n        <div className={person.personStatus}>\r\n            {editMode === false?\r\n            <div>\r\n                <p onDoubleClick={activateEditMode}>{status}</p>\r\n            </div>\r\n            :\r\n            <div>\r\n                <input onChange={e=>changeStatus(e)} autoFocus={true} onBlur={deActivateEditMode} value={status} />\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\nexport default PersonStatus;","import React from 'react';\r\nimport person from './Person.module.css';\r\nimport ava from './../../../images/brain.jpg';\r\nimport PersonStatus from './PersonStatus';\r\nconst Person = (props) => {\r\n    let photo = props.profile.photos.large === null?ava:props.profile.photos.large;\r\n    return (\r\n        <div className={person.person}>\r\n            <div className={person.personTopimg}></div>\r\n            <div className={person.personData}>\r\n                <img src={photo} className={person.personDataAva} />\r\n                <div className={person.personDataDesc}>\r\n                    <p className={person.personDataDescName}>{props.profile.fullName}</p>\r\n                    <PersonStatus {...props}/>\r\n                    <p className={person.personDataDescDesc}>Обо мне: {props.profile.aboutMe}</p>\r\n                    {props.profile.lookingForAJob ? <p className={person.personDataDescDesc}>В поиске работы</p> : <p className={person.personDataDescDesc}>У меня отличная работа</p>}\r\n                    <p className={person.personDataDescDesc}>Education: RSEU Rinh</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Person;","import React from 'react';\r\nimport p from './Post.module.css';\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={p.postsPost}>\r\n            <div className={p.postsPostImg}></div>\r\n            <p className={p.postsPostTxt}>{props.message}</p>\r\n            <p className={p.postsPostLike}>like: {props.likes}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators';\r\nimport { Input } from '../../common/FormsControlls/FormsControlls';\r\nimport p from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst maxLength = maxLengthCreator(30);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field validate={[required, maxLength]} name='postText' component={Input} placeholder='your news...' />\r\n            <button className={p.postsMenuSend}>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'AddNewPostForm'})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n    let posts = [...props.posts];\r\n    let postsElements = posts.reverse().map(p => <Post likes={p.likes} message={p.message} />);\r\n    let addPost = (value) => {\r\n        props.addPost(value.postText);\r\n    }\r\n    return (\r\n        <div className={p.postsArea}>\r\n            <div className={p.postsMenu}>\r\n                <p className={p.postsMenuHeader}>My posts</p>\r\n                <AddNewPostFormRedux onSubmit={addPost}/>\r\n            </div>\r\n            <div className={p.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from './../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (value) => {\r\n            dispatch(addPostActionCreator(value));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport Person from './Person/Person';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nconst Profile = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Person {...props} profile={props.profile} />\r\n            <MyPostsContainer />\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Profile;","import React, { useEffect } from 'react';\r\nimport p from './Profile.module.css';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUsers, setStatus } from './../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst ProfileContainer = (props) => {\r\n    useEffect(() => {\r\n        let userId = props.match.params.userId;\r\n        if (userId !== undefined) {\r\n            props.getUsers(userId);\r\n        }\r\n    }, []);\r\n    return (\r\n        <div className={p.mainContent}>\r\n            <Profile {...props} />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.profile.status,\r\n});\r\nexport default compose(\r\n    connect(mapStateToProps, { getUsers, setStatus }),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer)","export default __webpack_public_path__ + \"static/media/logo.3597d19d.png\";","import React from 'react';\r\nimport h from './Header.module.css';\r\nimport logo from './../../images/logo.png';\r\nimport { NavLink } from 'react-router-dom';\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={h.header}>\r\n            <img src={logo} />\r\n            {props.isAuth ? <div><p>{props.name}</p><button onClick={props.LogoutSanka}>Log out</button></div> : <NavLink to='/login'><p>Log in</p></NavLink>} \r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { LogoutSanka } from '../../redux/auth-reducer';\r\nimport { getUsers } from '../../redux/users-reducer';\r\nimport Header from './Header';\r\n\r\nconst HeaderContainer = (props) => {\r\n    useEffect(() => {\r\n        props.getUsers();\r\n    }, []);\r\n\r\n    return (\r\n        <Header {...props} />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    name: state.auth.name,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUsers, LogoutSanka })(HeaderContainer);","import React from 'react';\r\nimport style from './Login.module.css';\r\nimport {reduxForm, Field, stopSubmit} from 'redux-form';\r\nimport { Input } from '../common/FormsControlls/FormsControlls';\r\nimport { required } from '../../utils/validators';\r\nimport { LoginSanka } from '../../redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder='Login' name={'login'} validate={[required]} component={Input} />\r\n            </div>\r\n            <div>\r\n                <Field placeholder='Password' name={'password'} validate={[required]} component={Input} />\r\n            </div>\r\n            <div>\r\n                <Field type='checkbox' name={'rememberMe'} className={style.rem} component={'input'} /> remember me\r\n                </div>\r\n            <div>\r\n                <button>Log in</button>\r\n            </div>\r\n            <div className={style.summaryError}>\r\n                {props.error?<p>{props.error}</p>:''}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm); \r\n\r\nconst Login = (props) => {\r\n    let mySubmit = (formData) => {\r\n        props.LoginSanka(formData);\r\n    }\r\n    if(props.isAuth){\r\n        return <Redirect to='/profile' />\r\n    }\r\n    return (\r\n        <div className={style.sectionLogin}>\r\n            <p>Login</p>\r\n            <p>Hint: login and password - admin</p>\r\n            <LoginReduxForm onSubmit={mySubmit} />\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nconst LoginContainer = connect(mapStateToProps, {LoginSanka})(Login);\r\n\r\nexport default LoginContainer;","import React from 'react';\r\n\r\nconst withSuspense = (Component) => {\r\n    return (props) => (\r\n        <React.Suspense fallback={<div>...Loading</div>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    )\r\n}\r\n\r\nexport default withSuspense;","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport { Route } from 'react-router-dom';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport withSuspense from './hoc/withSuspense';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <div className=\"appWrapper\">\r\n      <HeaderContainer />\r\n      <div className=\"double\">\r\n        <NavBar friends={props.store.getState().navbarPage.friends} />\r\n        <Route path='/login' render={() => <Login />} />\r\n        <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\r\n        <Route path='/dialogs' render={withSuspense(DialogsContainer)} />\r\n        <Route path='/users' render={withSuspense(UsersContainer)}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;","import * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\n\r\nlet rerenderEntireTree = (state) => {\r\n  ReactDOM.render(\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n      <Provider store={store}>\r\n        <App store={store}/>\r\n      </Provider>\r\n    </HashRouter>, document.getElementById('root')\r\n  );\r\n}\r\n\r\nstore.subscribe(() => {\r\n  let state = store.getState();\r\n  rerenderEntireTree(state);\r\n});\r\n\r\nrerenderEntireTree(store.state);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","let authData = [\r\n    {\r\n        name: \"Malik Khubiev\",\r\n        login: 'admin',\r\n        password: 'admin',\r\n        rememberMe: false,\r\n    },\r\n];\r\n\r\nexport default authData;","import * as axios from 'axios';\r\nimport authData from './../redux/authDATA';\r\n\r\nexport const usersAPI = {\r\n    async getUsers(currentPage = 1, pageSize = 10) {\r\n        let response = await axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${currentPage}&count=${pageSize}`, {\r\n            withCredentials: true,\r\n        });\r\n        return response.data;\r\n    },\r\n    async getUser(userId) {\r\n        let response = await axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`);\r\n        return response.data;\r\n    },\r\n    logIn(loginData, callBack) {\r\n        let counter = 0;\r\n        authData.map(obj => {\r\n            if (obj.login === loginData.login && obj.password === loginData.password) {\r\n                callBack(true, obj.name);\r\n            } else {\r\n                counter++;\r\n            }\r\n        });\r\n        if (counter === authData.length) {\r\n            callBack('Wrong Email or Password');\r\n        }\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsArea\":\"MyPosts_postsArea__bYvCV\",\"postsMenu\":\"MyPosts_postsMenu__2ldav\",\"postsMenuHeader\":\"MyPosts_postsMenuHeader__285tx\",\"postsMenuSend\":\"MyPosts_postsMenuSend__32gny\",\"posts\":\"MyPosts_posts__2Bijw\",\"postsPost\":\"MyPosts_postsPost__xvg7d\",\"postsPostImg\":\"MyPosts_postsPostImg__3I9h0\",\"postsPostTxt\":\"MyPosts_postsPostTxt__bp_J3\"};","import React from 'react';\r\nimport styles from './FormsControlls.module.css';\r\n\r\nexport const Input = ({ input, meta, ...props } = props) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={hasError?styles.error:styles.formDiv}>\r\n            <input {...input} {...props} />\r\n            {hasError?<span>{meta.error}</span>:''}\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsPost\":\"Post_postsPost__2OwkX\",\"postsPostImg\":\"Post_postsPostImg__12iBn\",\"postsPostTxt\":\"Post_postsPostTxt__2pdjC\",\"postsPostLike\":\"Post_postsPostLike__1nzJy\"};","import { act } from \"react-dom/test-utils\";\r\nimport { arrayMaker } from \"../utils/reducer-helpers\";\r\nimport { usersAPI } from './../api/api';\r\n\r\nlet FOLLOW = 'FOLLOW';\r\nlet UNFOLLOW = 'UNFOLLOW';\r\nlet SET_USERS = 'SET-USERS';\r\nlet SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nlet SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nlet TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n        };\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount,\r\n            }\r\n        };\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber,\r\n            }\r\n        };\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => { return { type: FOLLOW, userId } };\r\nexport const unFollow = (userId) => { return { type: UNFOLLOW, userId } };\r\nexport const setUsers = (users) => { return { type: SET_USERS, users } };\r\nexport const setCurrentPage = (pageNumber) => { return { type: SET_CURRENT_PAGE, pageNumber } };\r\nexport const setTotalUsersCount = (totalCount) => { return { type: SET_TOTAL_USERS_COUNT, totalCount } };\r\nexport const toggleIsFetching = (isFetching) => { return { type: TOGGLE_IS_FETCHING, isFetching } };\r\n\r\nexport const getUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let data = await usersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setCurrentPage(currentPage));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount / 150));\r\n}\r\n\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsItem\":\"FriendsItem_friendsItem__1GzXE\",\"friendsItemImg\":\"FriendsItem_friendsItemImg__lt43M\",\"friendsItemName\":\"FriendsItem_friendsItemName__llYQG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionLogin\":\"Login_sectionLogin__2tzgq\",\"rem\":\"Login_rem__2BDXu\",\"summaryError\":\"Login_summaryError__3B1bs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formDiv\":\"FormsControlls_formDiv__AvjO5\",\"error\":\"FormsControlls_error__PqaDL\"};"],"sourceRoot":""}